; ModuleID = 'holmes.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9.0"

%struct.Elm_s = type { i8*, i8, i8, i8, i8, i8*, i8*, i64, [19 x %struct.interp_t] }
%struct.interp_t = type { float, float, i8, i8, i8 }
%struct.klatt_frame_t = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.klatt_global_t = type { i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sbuf = type { i8*, i32 }
%struct.__sFILEX = type opaque
%struct.filter_t = type { float, float, float }
%struct.slope_t = type { float, i32 }

@.str = private unnamed_addr constant [63 x i8] c"$Id: holmes.c,v 1.13 1994/11/08 13:30:50 a904209 Exp a904209 $\00", align 1
@holmes_id = global i8* getelementptr inbounds ([63 x i8]* @.str, i32 0, i32 0), align 8
@speed = global i32 1, align 4
@frac = global double 1.000000e+00, align 8
@Elements = external global [0 x %struct.Elm_s]
@def_pars = external global %struct.klatt_frame_t
@klatt_global = external global %struct.klatt_global_t
@par_file = common global %struct.__sFILE* null, align 8
@.str1 = private unnamed_addr constant [11 x i8] c"# %s < %s\0A\00", align 1
@.str2 = private unnamed_addr constant [12 x i8] c"# %s >= %s\0A\00", align 1
@.str3 = private unnamed_addr constant [6 x i8] c"# %s\0A\00", align 1
@.str4 = private unnamed_addr constant [6 x i8] c"%c%6s\00", align 1
@Ep_name = external global [19 x i8*]
@.str5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str6 = private unnamed_addr constant [8 x i8] c"%c%6.4g\00", align 1
@.str7 = private unnamed_addr constant [6 x i8] c"%c%6d\00", align 1
@.str8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str9 = private unnamed_addr constant [3 x i8] c"f0\00", align 1
@.str10 = private unnamed_addr constant [7 x i8] c" %6.4g\00", align 1
@jsru_file = common global %struct.__sFILE* null, align 8
@.str11 = private unnamed_addr constant [7 x i8] c"Holmes\00", align 1
@.str12 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str13 = private unnamed_addr constant [24 x i8] c"Parameter file for plot\00", align 1
@.str14 = private unnamed_addr constant [2 x i8] c"j\00", align 1
@.str15 = private unnamed_addr constant [32 x i8] c"Data for alternate synth (JSRU)\00", align 1
@.str16 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str17 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str18 = private unnamed_addr constant [24 x i8] c"Speed (1.0 is 'normal')\00", align 1
@.str19 = private unnamed_addr constant [2 x i8] c"K\00", align 1
@.str20 = private unnamed_addr constant [4 x i8] c"%lg\00", align 1
@.str21 = private unnamed_addr constant [28 x i8] c"Parameter filter 'fraction'\00", align 1
@help_only = external global i32
@.str22 = private unnamed_addr constant [2 x i8] c"w\00", align 1

; Function Attrs: nounwind ssp uwtable
define i32 @holmes(i32 %nelm, i8* %elm, i32 %nsamp, i16* %samp_base) #0 {
entry:
  %nelm.addr = alloca i32, align 4
  %elm.addr = alloca i8*, align 8
  %nsamp.addr = alloca i32, align 4
  %samp_base.addr = alloca i16*, align 8
  %flt = alloca [19 x %struct.filter_t], align 16
  %pars = alloca %struct.klatt_frame_t, align 8
  %samp = alloca i16*, align 8
  %le = alloca %struct.Elm_s*, align 8
  %i = alloca i32, align 4
  %tstress = alloca i32, align 4
  %ntstress = alloca i32, align 4
  %stress_s = alloca %struct.slope_t, align 4
  %stress_e = alloca %struct.slope_t, align 4
  %top = alloca float, align 4
  %j = alloca i32, align 4
  %ce = alloca %struct.Elm_s*, align 8
  %dur = alloca i32, align 4
  %ne = alloca %struct.Elm_s*, align 8
  %start = alloca [19 x %struct.slope_t], align 16
  %end = alloca [19 x %struct.slope_t], align 16
  %t37 = alloca i32, align 4
  %j79 = alloca i32, align 4
  %base = alloca float, align 4
  %tp = alloca [19 x float], align 16
  %j132 = alloca i32, align 4
  %j136 = alloca i32, align 4
  %stop_while_loop = alloca i32, align 4
  %e = alloca %struct.Elm_s*, align 8
  %du = alloca i32, align 4
  %s = alloca i32, align 4
  %d = alloca i32, align 4
  %j328 = alloca i32, align 4
  store i32 %nelm, i32* %nelm.addr, align 4
  store i8* %elm, i8** %elm.addr, align 8
  store i32 %nsamp, i32* %nsamp.addr, align 4
  store i16* %samp_base, i16** %samp_base.addr, align 8
  %0 = load i16** %samp_base.addr, align 8
  store i16* %0, i16** %samp, align 8
  store %struct.Elm_s* getelementptr inbounds ([0 x %struct.Elm_s]* @Elements, i32 0, i64 0), %struct.Elm_s** %le, align 8
  store i32 0, i32* %i, align 4
  store i32 0, i32* %tstress, align 4
  store i32 0, i32* %ntstress, align 4
  %1 = load i64* getelementptr inbounds (%struct.klatt_frame_t* @def_pars, i32 0, i32 0), align 8
  %conv = sitofp i64 %1 to double
  %mul = fmul double 1.100000e+00, %conv
  %conv1 = fptrunc double %mul to float
  store float %conv1, float* %top, align 4
  %2 = bitcast %struct.klatt_frame_t* %pars to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast (%struct.klatt_frame_t* @def_pars to i8*), i64 320, i32 8, i1 false)
  %3 = load %struct.Elm_s** %le, align 8
  %p = getelementptr inbounds %struct.Elm_s* %3, i32 0, i32 8
  %arrayidx = getelementptr inbounds [19 x %struct.interp_t]* %p, i32 0, i64 0
  %stdy = getelementptr inbounds %struct.interp_t* %arrayidx, i32 0, i32 0
  %4 = load float* %stdy, align 4
  %conv2 = fptosi float %4 to i64
  %FNPhz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 16
  store i64 %conv2, i64* %FNPhz, align 8
  %B1hz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 3
  store i64 60, i64* %B1hz, align 8
  %B1phz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 25
  store i64 60, i64* %B1phz, align 8
  %B2hz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 5
  store i64 90, i64* %B2hz, align 8
  %B2phz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 27
  store i64 90, i64* %B2phz, align 8
  %B3hz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 7
  store i64 150, i64* %B3hz, align 8
  %B3phz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 29
  store i64 150, i64* %B3phz, align 8
  %5 = load i64* getelementptr inbounds (%struct.klatt_frame_t* @def_pars, i32 0, i32 31), align 8
  %B4phz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 31
  store i64 %5, i64* %B4phz, align 8
  call void @parwave_init(%struct.klatt_global_t* @klatt_global)
  %t = getelementptr inbounds %struct.slope_t* %stress_s, i32 0, i32 1
  store i32 40, i32* %t, align 4
  %t3 = getelementptr inbounds %struct.slope_t* %stress_e, i32 0, i32 1
  store i32 40, i32* %t3, align 4
  %v = getelementptr inbounds %struct.slope_t* %stress_e, i32 0, i32 0
  store float 0.000000e+00, float* %v, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32* %j, align 4
  %cmp = icmp slt i32 %6, 19
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32* %j, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.Elm_s** %le, align 8
  %p5 = getelementptr inbounds %struct.Elm_s* %8, i32 0, i32 8
  %arrayidx6 = getelementptr inbounds [19 x %struct.interp_t]* %p5, i32 0, i64 %idxprom
  %stdy7 = getelementptr inbounds %struct.interp_t* %arrayidx6, i32 0, i32 0
  %9 = load float* %stdy7, align 4
  %10 = load i32* %j, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [19 x %struct.filter_t]* %flt, i32 0, i64 %idxprom8
  %v10 = getelementptr inbounds %struct.filter_t* %arrayidx9, i32 0, i32 2
  store float %9, float* %v10, align 4
  %11 = load double* @frac, align 8
  %conv11 = fptrunc double %11 to float
  %12 = load i32* %j, align 4
  %idxprom12 = sext i32 %12 to i64
  %arrayidx13 = getelementptr inbounds [19 x %struct.filter_t]* %flt, i32 0, i64 %idxprom12
  %a = getelementptr inbounds %struct.filter_t* %arrayidx13, i32 0, i32 0
  store float %conv11, float* %a, align 4
  %13 = load double* @frac, align 8
  %conv14 = fptrunc double %13 to float
  %sub = fsub float 1.000000e+00, %conv14
  %14 = load i32* %j, align 4
  %idxprom15 = sext i32 %14 to i64
  %arrayidx16 = getelementptr inbounds [19 x %struct.filter_t]* %flt, i32 0, i64 %idxprom15
  %b = getelementptr inbounds %struct.filter_t* %arrayidx16, i32 0, i32 1
  store float %sub, float* %b, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32* %j, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %if.end359, %for.end
  %16 = load i32* %i, align 4
  %17 = load i32* %nelm.addr, align 4
  %cmp17 = icmp ult i32 %16, %17
  br i1 %cmp17, label %while.body, label %while.end360

while.body:                                       ; preds = %while.cond
  %18 = load i32* %i, align 4
  %inc19 = add i32 %18, 1
  store i32 %inc19, i32* %i, align 4
  %idxprom20 = zext i32 %18 to i64
  %19 = load i8** %elm.addr, align 8
  %arrayidx21 = getelementptr inbounds i8* %19, i64 %idxprom20
  %20 = load i8* %arrayidx21, align 1
  %idxprom22 = zext i8 %20 to i64
  %arrayidx23 = getelementptr inbounds [0 x %struct.Elm_s]* @Elements, i32 0, i64 %idxprom22
  store %struct.Elm_s* %arrayidx23, %struct.Elm_s** %ce, align 8
  %21 = load i32* %i, align 4
  %inc24 = add i32 %21, 1
  store i32 %inc24, i32* %i, align 4
  %idxprom25 = zext i32 %21 to i64
  %22 = load i8** %elm.addr, align 8
  %arrayidx26 = getelementptr inbounds i8* %22, i64 %idxprom25
  %23 = load i8* %arrayidx26, align 1
  %conv27 = zext i8 %23 to i32
  store i32 %conv27, i32* %dur, align 4
  %24 = load i32* %i, align 4
  %inc28 = add i32 %24, 1
  store i32 %inc28, i32* %i, align 4
  %25 = load i32* %dur, align 4
  %cmp29 = icmp ugt i32 %25, 0
  br i1 %cmp29, label %if.then, label %if.end359

if.then:                                          ; preds = %while.body
  %26 = load i32* %i, align 4
  %27 = load i32* %nelm.addr, align 4
  %cmp31 = icmp ult i32 %26, %27
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %28 = load i32* %i, align 4
  %idxprom33 = zext i32 %28 to i64
  %29 = load i8** %elm.addr, align 8
  %arrayidx34 = getelementptr inbounds i8* %29, i64 %idxprom33
  %30 = load i8* %arrayidx34, align 1
  %idxprom35 = zext i8 %30 to i64
  %arrayidx36 = getelementptr inbounds [0 x %struct.Elm_s]* @Elements, i32 0, i64 %idxprom35
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Elm_s* [ %arrayidx36, %cond.true ], [ getelementptr inbounds ([0 x %struct.Elm_s]* @Elements, i32 0, i64 0), %cond.false ]
  store %struct.Elm_s* %cond, %struct.Elm_s** %ne, align 8
  %31 = load %struct.Elm_s** %ce, align 8
  %rk = getelementptr inbounds %struct.Elm_s* %31, i32 0, i32 1
  %32 = load i8* %rk, align 1
  %conv38 = sext i8 %32 to i32
  %33 = load %struct.Elm_s** %le, align 8
  %rk39 = getelementptr inbounds %struct.Elm_s* %33, i32 0, i32 1
  %34 = load i8* %rk39, align 1
  %conv40 = sext i8 %34 to i32
  %cmp41 = icmp sgt i32 %conv38, %conv40
  br i1 %cmp41, label %if.then43, label %if.else

if.then43:                                        ; preds = %cond.end
  %35 = load %struct.__sFILE** @par_file, align 8
  %tobool = icmp ne %struct.__sFILE* %35, null
  br i1 %tobool, label %if.then44, label %if.end

if.then44:                                        ; preds = %if.then43
  %36 = load %struct.__sFILE** @par_file, align 8
  %37 = load %struct.Elm_s** %le, align 8
  %name = getelementptr inbounds %struct.Elm_s* %37, i32 0, i32 0
  %38 = load i8** %name, align 8
  %39 = load %struct.Elm_s** %ce, align 8
  %name45 = getelementptr inbounds %struct.Elm_s* %39, i32 0, i32 0
  %40 = load i8** %name45, align 8
  %call = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %36, i8* getelementptr inbounds ([11 x i8]* @.str1, i32 0, i32 0), i8* %38, i8* %40)
  br label %if.end

if.end:                                           ; preds = %if.then44, %if.then43
  %arraydecay = getelementptr inbounds [19 x %struct.slope_t]* %start, i32 0, i32 0
  %41 = load %struct.Elm_s** %ce, align 8
  %42 = load %struct.Elm_s** %le, align 8
  call void @set_trans(%struct.slope_t* %arraydecay, %struct.Elm_s* %41, %struct.Elm_s* %42, i32 0, i32 115)
  br label %if.end53

if.else:                                          ; preds = %cond.end
  %43 = load %struct.__sFILE** @par_file, align 8
  %tobool46 = icmp ne %struct.__sFILE* %43, null
  br i1 %tobool46, label %if.then47, label %if.end51

if.then47:                                        ; preds = %if.else
  %44 = load %struct.__sFILE** @par_file, align 8
  %45 = load %struct.Elm_s** %le, align 8
  %name48 = getelementptr inbounds %struct.Elm_s* %45, i32 0, i32 0
  %46 = load i8** %name48, align 8
  %47 = load %struct.Elm_s** %ce, align 8
  %name49 = getelementptr inbounds %struct.Elm_s* %47, i32 0, i32 0
  %48 = load i8** %name49, align 8
  %call50 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %44, i8* getelementptr inbounds ([12 x i8]* @.str2, i32 0, i32 0), i8* %46, i8* %48)
  br label %if.end51

if.end51:                                         ; preds = %if.then47, %if.else
  %arraydecay52 = getelementptr inbounds [19 x %struct.slope_t]* %start, i32 0, i32 0
  %49 = load %struct.Elm_s** %le, align 8
  %50 = load %struct.Elm_s** %ce, align 8
  call void @set_trans(%struct.slope_t* %arraydecay52, %struct.Elm_s* %49, %struct.Elm_s* %50, i32 1, i32 115)
  br label %if.end53

if.end53:                                         ; preds = %if.end51, %if.end
  %51 = load %struct.Elm_s** %ne, align 8
  %rk54 = getelementptr inbounds %struct.Elm_s* %51, i32 0, i32 1
  %52 = load i8* %rk54, align 1
  %conv55 = sext i8 %52 to i32
  %53 = load %struct.Elm_s** %ce, align 8
  %rk56 = getelementptr inbounds %struct.Elm_s* %53, i32 0, i32 1
  %54 = load i8* %rk56, align 1
  %conv57 = sext i8 %54 to i32
  %cmp58 = icmp sgt i32 %conv55, %conv57
  br i1 %cmp58, label %if.then60, label %if.else68

if.then60:                                        ; preds = %if.end53
  %55 = load %struct.__sFILE** @par_file, align 8
  %tobool61 = icmp ne %struct.__sFILE* %55, null
  br i1 %tobool61, label %if.then62, label %if.end66

if.then62:                                        ; preds = %if.then60
  %56 = load %struct.__sFILE** @par_file, align 8
  %57 = load %struct.Elm_s** %ce, align 8
  %name63 = getelementptr inbounds %struct.Elm_s* %57, i32 0, i32 0
  %58 = load i8** %name63, align 8
  %59 = load %struct.Elm_s** %ne, align 8
  %name64 = getelementptr inbounds %struct.Elm_s* %59, i32 0, i32 0
  %60 = load i8** %name64, align 8
  %call65 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %56, i8* getelementptr inbounds ([11 x i8]* @.str1, i32 0, i32 0), i8* %58, i8* %60)
  br label %if.end66

if.end66:                                         ; preds = %if.then62, %if.then60
  %arraydecay67 = getelementptr inbounds [19 x %struct.slope_t]* %end, i32 0, i32 0
  %61 = load %struct.Elm_s** %ne, align 8
  %62 = load %struct.Elm_s** %ce, align 8
  call void @set_trans(%struct.slope_t* %arraydecay67, %struct.Elm_s* %61, %struct.Elm_s* %62, i32 1, i32 101)
  br label %if.end76

if.else68:                                        ; preds = %if.end53
  %63 = load %struct.__sFILE** @par_file, align 8
  %tobool69 = icmp ne %struct.__sFILE* %63, null
  br i1 %tobool69, label %if.then70, label %if.end74

if.then70:                                        ; preds = %if.else68
  %64 = load %struct.__sFILE** @par_file, align 8
  %65 = load %struct.Elm_s** %ce, align 8
  %name71 = getelementptr inbounds %struct.Elm_s* %65, i32 0, i32 0
  %66 = load i8** %name71, align 8
  %67 = load %struct.Elm_s** %ne, align 8
  %name72 = getelementptr inbounds %struct.Elm_s* %67, i32 0, i32 0
  %68 = load i8** %name72, align 8
  %call73 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %64, i8* getelementptr inbounds ([12 x i8]* @.str2, i32 0, i32 0), i8* %66, i8* %68)
  br label %if.end74

if.end74:                                         ; preds = %if.then70, %if.else68
  %arraydecay75 = getelementptr inbounds [19 x %struct.slope_t]* %end, i32 0, i32 0
  %69 = load %struct.Elm_s** %ce, align 8
  %70 = load %struct.Elm_s** %ne, align 8
  call void @set_trans(%struct.slope_t* %arraydecay75, %struct.Elm_s* %69, %struct.Elm_s* %70, i32 0, i32 101)
  br label %if.end76

if.end76:                                         ; preds = %if.end74, %if.end66
  %71 = load %struct.__sFILE** @par_file, align 8
  %tobool77 = icmp ne %struct.__sFILE* %71, null
  br i1 %tobool77, label %if.then78, label %if.end124

if.then78:                                        ; preds = %if.end76
  %72 = load %struct.__sFILE** @par_file, align 8
  %73 = load %struct.Elm_s** %ce, align 8
  %name80 = getelementptr inbounds %struct.Elm_s* %73, i32 0, i32 0
  %74 = load i8** %name80, align 8
  %call81 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %72, i8* getelementptr inbounds ([6 x i8]* @.str3, i32 0, i32 0), i8* %74)
  store i32 0, i32* %j79, align 4
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc91, %if.then78
  %75 = load i32* %j79, align 4
  %cmp83 = icmp slt i32 %75, 19
  br i1 %cmp83, label %for.body85, label %for.end93

for.body85:                                       ; preds = %for.cond82
  %76 = load %struct.__sFILE** @par_file, align 8
  %77 = load i32* %j79, align 4
  %tobool86 = icmp ne i32 %77, 0
  %cond87 = select i1 %tobool86, i32 32, i32 35
  %78 = load i32* %j79, align 4
  %idxprom88 = sext i32 %78 to i64
  %arrayidx89 = getelementptr inbounds [19 x i8*]* @Ep_name, i32 0, i64 %idxprom88
  %79 = load i8** %arrayidx89, align 8
  %call90 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %76, i8* getelementptr inbounds ([6 x i8]* @.str4, i32 0, i32 0), i32 %cond87, i8* %79)
  br label %for.inc91

for.inc91:                                        ; preds = %for.body85
  %80 = load i32* %j79, align 4
  %inc92 = add nsw i32 %80, 1
  store i32 %inc92, i32* %j79, align 4
  br label %for.cond82

for.end93:                                        ; preds = %for.cond82
  %81 = load %struct.__sFILE** @par_file, align 8
  %call94 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %81, i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  store i32 0, i32* %j79, align 4
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc106, %for.end93
  %82 = load i32* %j79, align 4
  %cmp96 = icmp slt i32 %82, 19
  br i1 %cmp96, label %for.body98, label %for.end108

for.body98:                                       ; preds = %for.cond95
  %83 = load %struct.__sFILE** @par_file, align 8
  %84 = load i32* %j79, align 4
  %tobool99 = icmp ne i32 %84, 0
  %cond100 = select i1 %tobool99, i32 32, i32 35
  %85 = load i32* %j79, align 4
  %idxprom101 = sext i32 %85 to i64
  %arrayidx102 = getelementptr inbounds [19 x %struct.slope_t]* %start, i32 0, i64 %idxprom101
  %v103 = getelementptr inbounds %struct.slope_t* %arrayidx102, i32 0, i32 0
  %86 = load float* %v103, align 4
  %conv104 = fpext float %86 to double
  %call105 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %83, i8* getelementptr inbounds ([8 x i8]* @.str6, i32 0, i32 0), i32 %cond100, double %conv104)
  br label %for.inc106

for.inc106:                                       ; preds = %for.body98
  %87 = load i32* %j79, align 4
  %inc107 = add nsw i32 %87, 1
  store i32 %inc107, i32* %j79, align 4
  br label %for.cond95

for.end108:                                       ; preds = %for.cond95
  %88 = load %struct.__sFILE** @par_file, align 8
  %call109 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %88, i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  store i32 0, i32* %j79, align 4
  br label %for.cond110

for.cond110:                                      ; preds = %for.inc120, %for.end108
  %89 = load i32* %j79, align 4
  %cmp111 = icmp slt i32 %89, 19
  br i1 %cmp111, label %for.body113, label %for.end122

for.body113:                                      ; preds = %for.cond110
  %90 = load %struct.__sFILE** @par_file, align 8
  %91 = load i32* %j79, align 4
  %tobool114 = icmp ne i32 %91, 0
  %cond115 = select i1 %tobool114, i32 32, i32 35
  %92 = load i32* %j79, align 4
  %idxprom116 = sext i32 %92 to i64
  %arrayidx117 = getelementptr inbounds [19 x %struct.slope_t]* %start, i32 0, i64 %idxprom116
  %t118 = getelementptr inbounds %struct.slope_t* %arrayidx117, i32 0, i32 1
  %93 = load i32* %t118, align 4
  %call119 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %90, i8* getelementptr inbounds ([6 x i8]* @.str7, i32 0, i32 0), i32 %cond115, i32 %93)
  br label %for.inc120

for.inc120:                                       ; preds = %for.body113
  %94 = load i32* %j79, align 4
  %inc121 = add nsw i32 %94, 1
  store i32 %inc121, i32* %j79, align 4
  br label %for.cond110

for.end122:                                       ; preds = %for.cond110
  %95 = load %struct.__sFILE** @par_file, align 8
  %call123 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %95, i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  br label %if.end124

if.end124:                                        ; preds = %for.end122, %if.end76
  store i32 0, i32* %t37, align 4
  br label %for.cond125

for.cond125:                                      ; preds = %for.inc322, %if.end124
  %96 = load i32* %t37, align 4
  %97 = load i32* %dur, align 4
  %cmp126 = icmp ult i32 %96, %97
  br i1 %cmp126, label %for.body128, label %for.end325

for.body128:                                      ; preds = %for.cond125
  %98 = load float* %top, align 4
  %conv129 = fpext float %98 to double
  %mul130 = fmul double %conv129, 8.000000e-01
  %conv131 = fptrunc double %mul130 to float
  store float %conv131, float* %base, align 4
  %99 = load i32* %tstress, align 4
  %100 = load i32* %ntstress, align 4
  %cmp133 = icmp eq i32 %99, %100
  br i1 %cmp133, label %if.then135, label %if.end218

if.then135:                                       ; preds = %for.body128
  %101 = load i32* %i, align 4
  store i32 %101, i32* %j136, align 4
  %102 = bitcast %struct.slope_t* %stress_s to i8*
  %103 = bitcast %struct.slope_t* %stress_e to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 8, i32 4, i1 false)
  store i32 0, i32* %tstress, align 4
  %104 = load i32* %dur, align 4
  store i32 %104, i32* %ntstress, align 4
  store i32 0, i32* %stop_while_loop, align 4
  br label %while.cond137

while.cond137:                                    ; preds = %if.end217, %if.then135
  %105 = load i32* %j136, align 4
  %106 = load i32* %nelm.addr, align 4
  %cmp138 = icmp ule i32 %105, %106
  br i1 %cmp138, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond137
  %107 = load i32* %stop_while_loop, align 4
  %cmp140 = icmp eq i32 %107, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond137
  %108 = phi i1 [ false, %while.cond137 ], [ %cmp140, %land.rhs ]
  br i1 %108, label %while.body142, label %while.end

while.body142:                                    ; preds = %land.end
  %109 = load i32* %j136, align 4
  %110 = load i32* %nelm.addr, align 4
  %cmp143 = icmp ult i32 %109, %110
  br i1 %cmp143, label %cond.true145, label %cond.false151

cond.true145:                                     ; preds = %while.body142
  %111 = load i32* %j136, align 4
  %inc146 = add i32 %111, 1
  store i32 %inc146, i32* %j136, align 4
  %idxprom147 = zext i32 %111 to i64
  %112 = load i8** %elm.addr, align 8
  %arrayidx148 = getelementptr inbounds i8* %112, i64 %idxprom147
  %113 = load i8* %arrayidx148, align 1
  %idxprom149 = zext i8 %113 to i64
  %arrayidx150 = getelementptr inbounds [0 x %struct.Elm_s]* @Elements, i32 0, i64 %idxprom149
  br label %cond.end152

cond.false151:                                    ; preds = %while.body142
  br label %cond.end152

cond.end152:                                      ; preds = %cond.false151, %cond.true145
  %cond153 = phi %struct.Elm_s* [ %arrayidx150, %cond.true145 ], [ getelementptr inbounds ([0 x %struct.Elm_s]* @Elements, i32 0, i64 0), %cond.false151 ]
  store %struct.Elm_s* %cond153, %struct.Elm_s** %e, align 8
  %114 = load i32* %j136, align 4
  %115 = load i32* %nelm.addr, align 4
  %cmp154 = icmp ult i32 %114, %115
  br i1 %cmp154, label %cond.true156, label %cond.false161

cond.true156:                                     ; preds = %cond.end152
  %116 = load i32* %j136, align 4
  %inc157 = add i32 %116, 1
  store i32 %inc157, i32* %j136, align 4
  %idxprom158 = zext i32 %116 to i64
  %117 = load i8** %elm.addr, align 8
  %arrayidx159 = getelementptr inbounds i8* %117, i64 %idxprom158
  %118 = load i8* %arrayidx159, align 1
  %conv160 = zext i8 %118 to i32
  br label %cond.end162

cond.false161:                                    ; preds = %cond.end152
  br label %cond.end162

cond.end162:                                      ; preds = %cond.false161, %cond.true156
  %cond163 = phi i32 [ %conv160, %cond.true156 ], [ 0, %cond.false161 ]
  store i32 %cond163, i32* %du, align 4
  %119 = load i32* %j136, align 4
  %120 = load i32* %nelm.addr, align 4
  %cmp164 = icmp ult i32 %119, %120
  br i1 %cmp164, label %cond.true166, label %cond.false171

cond.true166:                                     ; preds = %cond.end162
  %121 = load i32* %j136, align 4
  %inc167 = add i32 %121, 1
  store i32 %inc167, i32* %j136, align 4
  %idxprom168 = zext i32 %121 to i64
  %122 = load i8** %elm.addr, align 8
  %arrayidx169 = getelementptr inbounds i8* %122, i64 %idxprom168
  %123 = load i8* %arrayidx169, align 1
  %conv170 = zext i8 %123 to i32
  br label %cond.end172

cond.false171:                                    ; preds = %cond.end162
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false171, %cond.true166
  %cond173 = phi i32 [ %conv170, %cond.true166 ], [ 3, %cond.false171 ]
  store i32 %cond173, i32* %s, align 4
  %124 = load i32* %s, align 4
  %tobool174 = icmp ne i32 %124, 0
  br i1 %tobool174, label %if.then176, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end172
  %125 = load %struct.Elm_s** %e, align 8
  %feat = getelementptr inbounds %struct.Elm_s* %125, i32 0, i32 7
  %126 = load i64* %feat, align 8
  %and = and i64 %126, 268435456
  %tobool175 = icmp ne i64 %and, 0
  br i1 %tobool175, label %if.then176, label %if.end212

if.then176:                                       ; preds = %lor.lhs.false, %cond.end172
  store i32 0, i32* %d, align 4
  %127 = load i32* %s, align 4
  %tobool177 = icmp ne i32 %127, 0
  br i1 %tobool177, label %if.then178, label %if.else181

if.then178:                                       ; preds = %if.then176
  %128 = load i32* %s, align 4
  %conv179 = uitofp i32 %128 to float
  %div = fdiv float %conv179, 3.000000e+00
  %v180 = getelementptr inbounds %struct.slope_t* %stress_e, i32 0, i32 0
  store float %div, float* %v180, align 4
  br label %if.end183

if.else181:                                       ; preds = %if.then176
  %v182 = getelementptr inbounds %struct.slope_t* %stress_e, i32 0, i32 0
  store float 0x3FB99999A0000000, float* %v182, align 4
  br label %if.end183

if.end183:                                        ; preds = %if.else181, %if.then178
  br label %do.body

do.body:                                          ; preds = %land.end209, %if.end183
  %129 = load i32* %du, align 4
  %130 = load i32* %d, align 4
  %add = add i32 %130, %129
  store i32 %add, i32* %d, align 4
  %131 = load i32* %j136, align 4
  %132 = load i32* %nelm.addr, align 4
  %cmp184 = icmp ult i32 %131, %132
  br i1 %cmp184, label %cond.true186, label %cond.false192

cond.true186:                                     ; preds = %do.body
  %133 = load i32* %j136, align 4
  %inc187 = add i32 %133, 1
  store i32 %inc187, i32* %j136, align 4
  %idxprom188 = zext i32 %133 to i64
  %134 = load i8** %elm.addr, align 8
  %arrayidx189 = getelementptr inbounds i8* %134, i64 %idxprom188
  %135 = load i8* %arrayidx189, align 1
  %idxprom190 = zext i8 %135 to i64
  %arrayidx191 = getelementptr inbounds [0 x %struct.Elm_s]* @Elements, i32 0, i64 %idxprom190
  br label %cond.end193

cond.false192:                                    ; preds = %do.body
  br label %cond.end193

cond.end193:                                      ; preds = %cond.false192, %cond.true186
  %cond194 = phi %struct.Elm_s* [ %arrayidx191, %cond.true186 ], [ getelementptr inbounds ([0 x %struct.Elm_s]* @Elements, i32 0, i64 0), %cond.false192 ]
  store %struct.Elm_s* %cond194, %struct.Elm_s** %e, align 8
  %136 = load i32* %j136, align 4
  %inc195 = add i32 %136, 1
  store i32 %inc195, i32* %j136, align 4
  %idxprom196 = zext i32 %136 to i64
  %137 = load i8** %elm.addr, align 8
  %arrayidx197 = getelementptr inbounds i8* %137, i64 %idxprom196
  %138 = load i8* %arrayidx197, align 1
  %conv198 = zext i8 %138 to i32
  store i32 %conv198, i32* %du, align 4
  br label %do.cond

do.cond:                                          ; preds = %cond.end193
  %139 = load %struct.Elm_s** %e, align 8
  %feat199 = getelementptr inbounds %struct.Elm_s* %139, i32 0, i32 7
  %140 = load i64* %feat199, align 8
  %and200 = and i64 %140, 268435456
  %tobool201 = icmp ne i64 %and200, 0
  br i1 %tobool201, label %land.rhs202, label %land.end209

land.rhs202:                                      ; preds = %do.cond
  %141 = load i32* %j136, align 4
  %inc203 = add i32 %141, 1
  store i32 %inc203, i32* %j136, align 4
  %idxprom204 = zext i32 %141 to i64
  %142 = load i8** %elm.addr, align 8
  %arrayidx205 = getelementptr inbounds i8* %142, i64 %idxprom204
  %143 = load i8* %arrayidx205, align 1
  %conv206 = zext i8 %143 to i32
  %144 = load i32* %s, align 4
  %cmp207 = icmp eq i32 %conv206, %144
  br label %land.end209

land.end209:                                      ; preds = %land.rhs202, %do.cond
  %145 = phi i1 [ false, %do.cond ], [ %cmp207, %land.rhs202 ]
  br i1 %145, label %do.body, label %do.end

do.end:                                           ; preds = %land.end209
  %146 = load i32* %d, align 4
  %div210 = udiv i32 %146, 2
  %147 = load i32* %ntstress, align 4
  %add211 = add i32 %147, %div210
  store i32 %add211, i32* %ntstress, align 4
  store i32 1, i32* %stop_while_loop, align 4
  br label %if.end212

if.end212:                                        ; preds = %do.end, %lor.lhs.false
  %148 = load i32* %stop_while_loop, align 4
  %cmp213 = icmp eq i32 %148, 0
  br i1 %cmp213, label %if.then215, label %if.end217

if.then215:                                       ; preds = %if.end212
  %149 = load i32* %du, align 4
  %150 = load i32* %ntstress, align 4
  %add216 = add i32 %150, %149
  store i32 %add216, i32* %ntstress, align 4
  br label %if.end217

if.end217:                                        ; preds = %if.then215, %if.end212
  br label %while.cond137

while.end:                                        ; preds = %land.end
  br label %if.end218

if.end218:                                        ; preds = %while.end, %for.body128
  store i32 0, i32* %j132, align 4
  br label %for.cond219

for.cond219:                                      ; preds = %for.inc239, %if.end218
  %151 = load i32* %j132, align 4
  %cmp220 = icmp slt i32 %151, 19
  br i1 %cmp220, label %for.body222, label %for.end241

for.body222:                                      ; preds = %for.cond219
  %arraydecay223 = getelementptr inbounds [19 x %struct.filter_t]* %flt, i32 0, i32 0
  %152 = load i32* %j132, align 4
  %idx.ext = sext i32 %152 to i64
  %add.ptr = getelementptr inbounds %struct.filter_t* %arraydecay223, i64 %idx.ext
  %153 = load %struct.Elm_s** %ce, align 8
  %name224 = getelementptr inbounds %struct.Elm_s* %153, i32 0, i32 0
  %154 = load i8** %name224, align 8
  %155 = load i32* %j132, align 4
  %idxprom225 = sext i32 %155 to i64
  %arrayidx226 = getelementptr inbounds [19 x i8*]* @Ep_name, i32 0, i64 %idxprom225
  %156 = load i8** %arrayidx226, align 8
  %157 = load i32* %j132, align 4
  %idxprom227 = sext i32 %157 to i64
  %arrayidx228 = getelementptr inbounds [19 x %struct.slope_t]* %start, i32 0, i64 %idxprom227
  %158 = load i32* %j132, align 4
  %idxprom229 = sext i32 %158 to i64
  %arrayidx230 = getelementptr inbounds [19 x %struct.slope_t]* %end, i32 0, i64 %idxprom229
  %159 = load i32* %j132, align 4
  %idxprom231 = sext i32 %159 to i64
  %160 = load %struct.Elm_s** %ce, align 8
  %p232 = getelementptr inbounds %struct.Elm_s* %160, i32 0, i32 8
  %arrayidx233 = getelementptr inbounds [19 x %struct.interp_t]* %p232, i32 0, i64 %idxprom231
  %stdy234 = getelementptr inbounds %struct.interp_t* %arrayidx233, i32 0, i32 0
  %161 = load float* %stdy234, align 4
  %162 = load i32* %t37, align 4
  %163 = load i32* %dur, align 4
  %call235 = call float @interpolate(i8* %154, i8* %156, %struct.slope_t* %arrayidx228, %struct.slope_t* %arrayidx230, float %161, i32 %162, i32 %163)
  %call236 = call float @filter(%struct.filter_t* %add.ptr, float %call235)
  %164 = load i32* %j132, align 4
  %idxprom237 = sext i32 %164 to i64
  %arrayidx238 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 %idxprom237
  store float %call236, float* %arrayidx238, align 4
  br label %for.inc239

for.inc239:                                       ; preds = %for.body222
  %165 = load i32* %j132, align 4
  %inc240 = add nsw i32 %165, 1
  store i32 %inc240, i32* %j132, align 4
  br label %for.cond219

for.end241:                                       ; preds = %for.cond219
  %166 = load float* %base, align 4
  %167 = load float* %top, align 4
  %168 = load float* %base, align 4
  %sub242 = fsub float %167, %168
  %169 = load i32* %tstress, align 4
  %170 = load i32* %ntstress, align 4
  %call243 = call float @interpolate(i8* getelementptr inbounds ([1 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str9, i32 0, i32 0), %struct.slope_t* %stress_s, %struct.slope_t* %stress_e, float 0.000000e+00, i32 %169, i32 %170)
  %mul244 = fmul float %sub242, %call243
  %add245 = fadd float %166, %mul244
  %conv246 = fptosi float %add245 to i64
  %F0hz10 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 0
  store i64 %conv246, i64* %F0hz10, align 8
  %arrayidx247 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 15
  %171 = load float* %arrayidx247, align 4
  %conv248 = fptosi float %171 to i64
  %AVpdb = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 38
  store i64 %conv248, i64* %AVpdb, align 8
  %AVdb = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 1
  store i64 %conv248, i64* %AVdb, align 8
  %arrayidx249 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 18
  %172 = load float* %arrayidx249, align 4
  %conv250 = fptosi float %172 to i64
  %AF = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 22
  store i64 %conv250, i64* %AF, align 8
  %arrayidx251 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 0
  %173 = load float* %arrayidx251, align 4
  %conv252 = fptosi float %173 to i64
  %FNZhz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 14
  store i64 %conv252, i64* %FNZhz, align 8
  %arrayidx253 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 17
  %174 = load float* %arrayidx253, align 4
  %conv254 = fptosi float %174 to i64
  %ASP = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 18
  store i64 %conv254, i64* %ASP, align 8
  %arrayidx255 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 16
  %175 = load float* %arrayidx255, align 4
  %conv256 = fptosi float %175 to i64
  %Aturb = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 20
  store i64 %conv256, i64* %Aturb, align 8
  %arrayidx257 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 4
  %176 = load float* %arrayidx257, align 4
  %conv258 = fptosi float %176 to i64
  %B1hz259 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 3
  store i64 %conv258, i64* %B1hz259, align 8
  %B1phz260 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 25
  store i64 %conv258, i64* %B1phz260, align 8
  %arrayidx261 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 5
  %177 = load float* %arrayidx261, align 4
  %conv262 = fptosi float %177 to i64
  %B2hz263 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 5
  store i64 %conv262, i64* %B2hz263, align 8
  %B2phz264 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 27
  store i64 %conv262, i64* %B2phz264, align 8
  %arrayidx265 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 6
  %178 = load float* %arrayidx265, align 4
  %conv266 = fptosi float %178 to i64
  %B3hz267 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 7
  store i64 %conv266, i64* %B3hz267, align 8
  %B3phz268 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 29
  store i64 %conv266, i64* %B3phz268, align 8
  %arrayidx269 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 1
  %179 = load float* %arrayidx269, align 4
  %conv270 = fptosi float %179 to i64
  %F1hz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 2
  store i64 %conv270, i64* %F1hz, align 8
  %arrayidx271 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 2
  %180 = load float* %arrayidx271, align 4
  %conv272 = fptosi float %180 to i64
  %F2hz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 4
  store i64 %conv272, i64* %F2hz, align 8
  %arrayidx273 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 3
  %181 = load float* %arrayidx273, align 4
  %conv274 = fptosi float %181 to i64
  %F3hz = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 6
  store i64 %conv274, i64* %F3hz, align 8
  %arrayidx275 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 14
  %182 = load float* %arrayidx275, align 4
  %add276 = fadd float 1.400000e+01, %182
  %conv277 = fptosi float %add276 to i64
  %AB = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 37
  store i64 %conv277, i64* %AB, align 8
  %arrayidx278 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 12
  %183 = load float* %arrayidx278, align 4
  %add279 = fadd float 1.400000e+01, %183
  %conv280 = fptosi float %add279 to i64
  %A5 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 32
  store i64 %conv280, i64* %A5, align 8
  %arrayidx281 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 13
  %184 = load float* %arrayidx281, align 4
  %add282 = fadd float 1.400000e+01, %184
  %conv283 = fptosi float %add282 to i64
  %A6 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 34
  store i64 %conv283, i64* %A6, align 8
  %arrayidx284 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 8
  %185 = load float* %arrayidx284, align 4
  %add285 = fadd float 1.400000e+01, %185
  %conv286 = fptosi float %add285 to i64
  %A1 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 24
  store i64 %conv286, i64* %A1, align 8
  %arrayidx287 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 9
  %186 = load float* %arrayidx287, align 4
  %add288 = fadd float 1.400000e+01, %186
  %conv289 = fptosi float %add288 to i64
  %A2 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 26
  store i64 %conv289, i64* %A2, align 8
  %arrayidx290 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 10
  %187 = load float* %arrayidx290, align 4
  %add291 = fadd float 1.400000e+01, %187
  %conv292 = fptosi float %add291 to i64
  %A3 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 28
  store i64 %conv292, i64* %A3, align 8
  %arrayidx293 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 11
  %188 = load float* %arrayidx293, align 4
  %add294 = fadd float 1.400000e+01, %188
  %conv295 = fptosi float %add294 to i64
  %A4 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 30
  store i64 %conv295, i64* %A4, align 8
  %189 = load i16** %samp, align 8
  call void @parwave(%struct.klatt_global_t* @klatt_global, %struct.klatt_frame_t* %pars, i16* %189)
  %190 = load i64* getelementptr inbounds (%struct.klatt_global_t* @klatt_global, i32 0, i32 7), align 8
  %191 = load i16** %samp, align 8
  %add.ptr296 = getelementptr inbounds i16* %191, i64 %190
  store i16* %add.ptr296, i16** %samp, align 8
  %192 = load %struct.__sFILE** @par_file, align 8
  %tobool297 = icmp ne %struct.__sFILE* %192, null
  br i1 %tobool297, label %if.then298, label %if.end311

if.then298:                                       ; preds = %for.end241
  store i32 0, i32* %j132, align 4
  br label %for.cond299

for.cond299:                                      ; preds = %for.inc307, %if.then298
  %193 = load i32* %j132, align 4
  %cmp300 = icmp slt i32 %193, 19
  br i1 %cmp300, label %for.body302, label %for.end309

for.body302:                                      ; preds = %for.cond299
  %194 = load %struct.__sFILE** @par_file, align 8
  %195 = load i32* %j132, align 4
  %idxprom303 = sext i32 %195 to i64
  %arrayidx304 = getelementptr inbounds [19 x float]* %tp, i32 0, i64 %idxprom303
  %196 = load float* %arrayidx304, align 4
  %conv305 = fpext float %196 to double
  %call306 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %194, i8* getelementptr inbounds ([7 x i8]* @.str10, i32 0, i32 0), double %conv305)
  br label %for.inc307

for.inc307:                                       ; preds = %for.body302
  %197 = load i32* %j132, align 4
  %inc308 = add nsw i32 %197, 1
  store i32 %inc308, i32* %j132, align 4
  br label %for.cond299

for.end309:                                       ; preds = %for.cond299
  %198 = load %struct.__sFILE** @par_file, align 8
  %call310 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %198, i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  br label %if.end311

if.end311:                                        ; preds = %for.end309, %for.end241
  %199 = load %struct.__sFILE** @jsru_file, align 8
  %tobool312 = icmp ne %struct.__sFILE* %199, null
  br i1 %tobool312, label %if.then313, label %if.end318

if.then313:                                       ; preds = %if.end311
  %F0hz10314 = getelementptr inbounds %struct.klatt_frame_t* %pars, i32 0, i32 0
  %200 = load i64* %F0hz10314, align 8
  %conv315 = sitofp i64 %200 to double
  %mul316 = fmul double %conv315, 1.000000e-01
  %arraydecay317 = getelementptr inbounds [19 x float]* %tp, i32 0, i32 0
  call void @jsru_save(double %mul316, float* %arraydecay317)
  br label %if.end318

if.end318:                                        ; preds = %if.then313, %if.end311
  %201 = load float* %top, align 4
  %conv319 = fpext float %201 to double
  %sub320 = fsub double %conv319, 5.000000e-01
  %conv321 = fptrunc double %sub320 to float
  store float %conv321, float* %top, align 4
  br label %for.inc322

for.inc322:                                       ; preds = %if.end318
  %202 = load i32* %t37, align 4
  %inc323 = add i32 %202, 1
  store i32 %inc323, i32* %t37, align 4
  %203 = load i32* %tstress, align 4
  %inc324 = add i32 %203, 1
  store i32 %inc324, i32* %tstress, align 4
  br label %for.cond125

for.end325:                                       ; preds = %for.cond125
  %204 = load %struct.__sFILE** @par_file, align 8
  %tobool326 = icmp ne %struct.__sFILE* %204, null
  br i1 %tobool326, label %if.then327, label %if.end358

if.then327:                                       ; preds = %for.end325
  store i32 0, i32* %j328, align 4
  br label %for.cond329

for.cond329:                                      ; preds = %for.inc340, %if.then327
  %205 = load i32* %j328, align 4
  %cmp330 = icmp slt i32 %205, 19
  br i1 %cmp330, label %for.body332, label %for.end342

for.body332:                                      ; preds = %for.cond329
  %206 = load %struct.__sFILE** @par_file, align 8
  %207 = load i32* %j328, align 4
  %tobool333 = icmp ne i32 %207, 0
  %cond334 = select i1 %tobool333, i32 32, i32 35
  %208 = load i32* %j328, align 4
  %idxprom335 = sext i32 %208 to i64
  %arrayidx336 = getelementptr inbounds [19 x %struct.slope_t]* %end, i32 0, i64 %idxprom335
  %v337 = getelementptr inbounds %struct.slope_t* %arrayidx336, i32 0, i32 0
  %209 = load float* %v337, align 4
  %conv338 = fpext float %209 to double
  %call339 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %206, i8* getelementptr inbounds ([8 x i8]* @.str6, i32 0, i32 0), i32 %cond334, double %conv338)
  br label %for.inc340

for.inc340:                                       ; preds = %for.body332
  %210 = load i32* %j328, align 4
  %inc341 = add nsw i32 %210, 1
  store i32 %inc341, i32* %j328, align 4
  br label %for.cond329

for.end342:                                       ; preds = %for.cond329
  %211 = load %struct.__sFILE** @par_file, align 8
  %call343 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %211, i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  store i32 0, i32* %j328, align 4
  br label %for.cond344

for.cond344:                                      ; preds = %for.inc354, %for.end342
  %212 = load i32* %j328, align 4
  %cmp345 = icmp slt i32 %212, 19
  br i1 %cmp345, label %for.body347, label %for.end356

for.body347:                                      ; preds = %for.cond344
  %213 = load %struct.__sFILE** @par_file, align 8
  %214 = load i32* %j328, align 4
  %tobool348 = icmp ne i32 %214, 0
  %cond349 = select i1 %tobool348, i32 32, i32 35
  %215 = load i32* %j328, align 4
  %idxprom350 = sext i32 %215 to i64
  %arrayidx351 = getelementptr inbounds [19 x %struct.slope_t]* %end, i32 0, i64 %idxprom350
  %t352 = getelementptr inbounds %struct.slope_t* %arrayidx351, i32 0, i32 1
  %216 = load i32* %t352, align 4
  %call353 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %213, i8* getelementptr inbounds ([6 x i8]* @.str7, i32 0, i32 0), i32 %cond349, i32 %216)
  br label %for.inc354

for.inc354:                                       ; preds = %for.body347
  %217 = load i32* %j328, align 4
  %inc355 = add nsw i32 %217, 1
  store i32 %inc355, i32* %j328, align 4
  br label %for.cond344

for.end356:                                       ; preds = %for.cond344
  %218 = load %struct.__sFILE** @par_file, align 8
  %call357 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %218, i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0))
  br label %if.end358

if.end358:                                        ; preds = %for.end356, %for.end325
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %while.body
  %219 = load %struct.Elm_s** %ce, align 8
  store %struct.Elm_s* %219, %struct.Elm_s** %le, align 8
  br label %while.cond

while.end360:                                     ; preds = %while.cond
  %220 = load i16** %samp, align 8
  %221 = load i16** %samp_base.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i16* %220 to i64
  %sub.ptr.rhs.cast = ptrtoint i16* %221 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2
  %conv361 = trunc i64 %sub.ptr.div to i32
  ret i32 %conv361
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare void @parwave_init(%struct.klatt_global_t*) #2

declare i32 @fprintf(%struct.__sFILE*, i8*, ...) #2

; Function Attrs: nounwind ssp uwtable
define internal void @set_trans(%struct.slope_t* %t, %struct.Elm_s* %a, %struct.Elm_s* %b, i32 %ext, i32 %e) #0 {
entry:
  %t.addr = alloca %struct.slope_t*, align 8
  %a.addr = alloca %struct.Elm_s*, align 8
  %b.addr = alloca %struct.Elm_s*, align 8
  %ext.addr = alloca i32, align 4
  %e.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.slope_t* %t, %struct.slope_t** %t.addr, align 8
  store %struct.Elm_s* %a, %struct.Elm_s** %a.addr, align 8
  store %struct.Elm_s* %b, %struct.Elm_s** %b.addr, align 8
  store i32 %ext, i32* %ext.addr, align 4
  store i32 %e, i32* %e.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 19
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %ext.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.Elm_s** %a.addr, align 8
  %p = getelementptr inbounds %struct.Elm_s* %3, i32 0, i32 8
  %arrayidx = getelementptr inbounds [19 x %struct.interp_t]* %p, i32 0, i64 %idxprom
  %ed = getelementptr inbounds %struct.interp_t* %arrayidx, i32 0, i32 3
  %4 = load i8* %ed, align 1
  %conv = sext i8 %4 to i32
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %5 = load i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load %struct.Elm_s** %a.addr, align 8
  %p2 = getelementptr inbounds %struct.Elm_s* %6, i32 0, i32 8
  %arrayidx3 = getelementptr inbounds [19 x %struct.interp_t]* %p2, i32 0, i64 %idxprom1
  %id = getelementptr inbounds %struct.interp_t* %arrayidx3, i32 0, i32 4
  %7 = load i8* %id, align 1
  %conv4 = sext i8 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv4, %cond.false ]
  %8 = load i32* @speed, align 4
  %mul = mul nsw i32 %cond, %8
  %9 = load i32* %i, align 4
  %idxprom5 = sext i32 %9 to i64
  %10 = load %struct.slope_t** %t.addr, align 8
  %arrayidx6 = getelementptr inbounds %struct.slope_t* %10, i64 %idxprom5
  %t7 = getelementptr inbounds %struct.slope_t* %arrayidx6, i32 0, i32 1
  store i32 %mul, i32* %t7, align 4
  %11 = load i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.slope_t** %t.addr, align 8
  %arrayidx9 = getelementptr inbounds %struct.slope_t* %12, i64 %idxprom8
  %t10 = getelementptr inbounds %struct.slope_t* %arrayidx9, i32 0, i32 1
  %13 = load i32* %t10, align 4
  %tobool11 = icmp ne i32 %13, 0
  br i1 %tobool11, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %14 = load i32* %i, align 4
  %idxprom12 = sext i32 %14 to i64
  %15 = load %struct.Elm_s** %a.addr, align 8
  %p13 = getelementptr inbounds %struct.Elm_s* %15, i32 0, i32 8
  %arrayidx14 = getelementptr inbounds [19 x %struct.interp_t]* %p13, i32 0, i64 %idxprom12
  %fixd = getelementptr inbounds %struct.interp_t* %arrayidx14, i32 0, i32 1
  %16 = load float* %fixd, align 4
  %17 = load i32* %i, align 4
  %idxprom15 = sext i32 %17 to i64
  %18 = load %struct.Elm_s** %a.addr, align 8
  %p16 = getelementptr inbounds %struct.Elm_s* %18, i32 0, i32 8
  %arrayidx17 = getelementptr inbounds [19 x %struct.interp_t]* %p16, i32 0, i64 %idxprom15
  %prop = getelementptr inbounds %struct.interp_t* %arrayidx17, i32 0, i32 2
  %19 = load i8* %prop, align 1
  %conv18 = sext i8 %19 to i32
  %conv19 = sitofp i32 %conv18 to float
  %20 = load i32* %i, align 4
  %idxprom20 = sext i32 %20 to i64
  %21 = load %struct.Elm_s** %b.addr, align 8
  %p21 = getelementptr inbounds %struct.Elm_s* %21, i32 0, i32 8
  %arrayidx22 = getelementptr inbounds [19 x %struct.interp_t]* %p21, i32 0, i64 %idxprom20
  %stdy = getelementptr inbounds %struct.interp_t* %arrayidx22, i32 0, i32 0
  %22 = load float* %stdy, align 4
  %mul23 = fmul float %conv19, %22
  %mul24 = fmul float %mul23, 0x3F847AE140000000
  %add = fadd float %16, %mul24
  %23 = load i32* %i, align 4
  %idxprom25 = sext i32 %23 to i64
  %24 = load %struct.slope_t** %t.addr, align 8
  %arrayidx26 = getelementptr inbounds %struct.slope_t* %24, i64 %idxprom25
  %v = getelementptr inbounds %struct.slope_t* %arrayidx26, i32 0, i32 0
  store float %add, float* %v, align 4
  br label %if.end

if.else:                                          ; preds = %cond.end
  %25 = load i32* %i, align 4
  %idxprom27 = sext i32 %25 to i64
  %26 = load %struct.Elm_s** %b.addr, align 8
  %p28 = getelementptr inbounds %struct.Elm_s* %26, i32 0, i32 8
  %arrayidx29 = getelementptr inbounds [19 x %struct.interp_t]* %p28, i32 0, i64 %idxprom27
  %stdy30 = getelementptr inbounds %struct.interp_t* %arrayidx29, i32 0, i32 0
  %27 = load float* %stdy30, align 4
  %28 = load i32* %i, align 4
  %idxprom31 = sext i32 %28 to i64
  %29 = load %struct.slope_t** %t.addr, align 8
  %arrayidx32 = getelementptr inbounds %struct.slope_t* %29, i64 %idxprom31
  %v33 = getelementptr inbounds %struct.slope_t* %arrayidx32, i32 0, i32 0
  store float %27, float* %v33, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %30 = load i32* %i, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal float @filter(%struct.filter_t* %p, float %v) #0 {
entry:
  %p.addr = alloca %struct.filter_t*, align 8
  %v.addr = alloca float, align 4
  store %struct.filter_t* %p, %struct.filter_t** %p.addr, align 8
  store float %v, float* %v.addr, align 4
  %0 = load %struct.filter_t** %p.addr, align 8
  %a = getelementptr inbounds %struct.filter_t* %0, i32 0, i32 0
  %1 = load float* %a, align 4
  %2 = load float* %v.addr, align 4
  %mul = fmul float %1, %2
  %3 = load %struct.filter_t** %p.addr, align 8
  %b = getelementptr inbounds %struct.filter_t* %3, i32 0, i32 1
  %4 = load float* %b, align 4
  %5 = load %struct.filter_t** %p.addr, align 8
  %v1 = getelementptr inbounds %struct.filter_t* %5, i32 0, i32 2
  %6 = load float* %v1, align 4
  %mul2 = fmul float %4, %6
  %add = fadd float %mul, %mul2
  %7 = load %struct.filter_t** %p.addr, align 8
  %v3 = getelementptr inbounds %struct.filter_t* %7, i32 0, i32 2
  store float %add, float* %v3, align 4
  ret float %add
}

; Function Attrs: nounwind ssp uwtable
define internal float @interpolate(i8* %w, i8* %p, %struct.slope_t* %s, %struct.slope_t* %e, float %mid, i32 %t, i32 %d) #0 {
entry:
  %retval = alloca float, align 4
  %w.addr = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %s.addr = alloca %struct.slope_t*, align 8
  %e.addr = alloca %struct.slope_t*, align 8
  %mid.addr = alloca float, align 4
  %t.addr = alloca i32, align 4
  %d.addr = alloca i32, align 4
  %steady = alloca float, align 4
  %f = alloca float, align 4
  %sp = alloca float, align 4
  %ep = alloca float, align 4
  store i8* %w, i8** %w.addr, align 8
  store i8* %p, i8** %p.addr, align 8
  store %struct.slope_t* %s, %struct.slope_t** %s.addr, align 8
  store %struct.slope_t* %e, %struct.slope_t** %e.addr, align 8
  store float %mid, float* %mid.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  store i32 %d, i32* %d.addr, align 4
  %0 = load i32* %d.addr, align 4
  %1 = load %struct.slope_t** %s.addr, align 8
  %t1 = getelementptr inbounds %struct.slope_t* %1, i32 0, i32 1
  %2 = load i32* %t1, align 4
  %3 = load %struct.slope_t** %e.addr, align 8
  %t2 = getelementptr inbounds %struct.slope_t* %3, i32 0, i32 1
  %4 = load i32* %t2, align 4
  %add = add nsw i32 %2, %4
  %sub = sub nsw i32 %0, %add
  %conv = sitofp i32 %sub to float
  store float %conv, float* %steady, align 4
  %5 = load float* %steady, align 4
  %cmp = fcmp oge float %5, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.else22

if.then:                                          ; preds = %entry
  %6 = load i32* %t.addr, align 4
  %7 = load %struct.slope_t** %s.addr, align 8
  %t4 = getelementptr inbounds %struct.slope_t* %7, i32 0, i32 1
  %8 = load i32* %t4, align 4
  %cmp5 = icmp slt i32 %6, %8
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then
  %9 = load %struct.slope_t** %s.addr, align 8
  %v = getelementptr inbounds %struct.slope_t* %9, i32 0, i32 0
  %10 = load float* %v, align 4
  %11 = load float* %mid.addr, align 4
  %12 = load i32* %t.addr, align 4
  %13 = load %struct.slope_t** %s.addr, align 8
  %t8 = getelementptr inbounds %struct.slope_t* %13, i32 0, i32 1
  %14 = load i32* %t8, align 4
  %call = call float @linear(float %10, float %11, i32 %12, i32 %14)
  store float %call, float* %retval
  br label %return

if.else:                                          ; preds = %if.then
  %15 = load %struct.slope_t** %s.addr, align 8
  %t9 = getelementptr inbounds %struct.slope_t* %15, i32 0, i32 1
  %16 = load i32* %t9, align 4
  %17 = load i32* %t.addr, align 4
  %sub10 = sub nsw i32 %17, %16
  store i32 %sub10, i32* %t.addr, align 4
  %18 = load i32* %t.addr, align 4
  %conv11 = sitofp i32 %18 to float
  %19 = load float* %steady, align 4
  %cmp12 = fcmp ole float %conv11, %19
  br i1 %cmp12, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else
  %20 = load float* %mid.addr, align 4
  store float %20, float* %retval
  br label %return

if.else15:                                        ; preds = %if.else
  %21 = load float* %mid.addr, align 4
  %22 = load %struct.slope_t** %e.addr, align 8
  %v16 = getelementptr inbounds %struct.slope_t* %22, i32 0, i32 0
  %23 = load float* %v16, align 4
  %24 = load i32* %t.addr, align 4
  %conv17 = sitofp i32 %24 to float
  %25 = load float* %steady, align 4
  %sub18 = fsub float %conv17, %25
  %conv19 = fptosi float %sub18 to i32
  %26 = load %struct.slope_t** %e.addr, align 8
  %t20 = getelementptr inbounds %struct.slope_t* %26, i32 0, i32 1
  %27 = load i32* %t20, align 4
  %call21 = call float @linear(float %21, float %23, i32 %conv19, i32 %27)
  store float %call21, float* %retval
  br label %return

if.else22:                                        ; preds = %entry
  %28 = load i32* %t.addr, align 4
  %conv23 = sitofp i32 %28 to float
  %29 = load i32* %d.addr, align 4
  %conv24 = sitofp i32 %29 to float
  %div = fdiv float %conv23, %conv24
  %sub25 = fsub float 1.000000e+00, %div
  store float %sub25, float* %f, align 4
  %30 = load %struct.slope_t** %s.addr, align 8
  %v26 = getelementptr inbounds %struct.slope_t* %30, i32 0, i32 0
  %31 = load float* %v26, align 4
  %32 = load float* %mid.addr, align 4
  %33 = load i32* %t.addr, align 4
  %34 = load %struct.slope_t** %s.addr, align 8
  %t27 = getelementptr inbounds %struct.slope_t* %34, i32 0, i32 1
  %35 = load i32* %t27, align 4
  %call28 = call float @linear(float %31, float %32, i32 %33, i32 %35)
  store float %call28, float* %sp, align 4
  %36 = load %struct.slope_t** %e.addr, align 8
  %v29 = getelementptr inbounds %struct.slope_t* %36, i32 0, i32 0
  %37 = load float* %v29, align 4
  %38 = load float* %mid.addr, align 4
  %39 = load i32* %d.addr, align 4
  %40 = load i32* %t.addr, align 4
  %sub30 = sub nsw i32 %39, %40
  %41 = load %struct.slope_t** %e.addr, align 8
  %t31 = getelementptr inbounds %struct.slope_t* %41, i32 0, i32 1
  %42 = load i32* %t31, align 4
  %call32 = call float @linear(float %37, float %38, i32 %sub30, i32 %42)
  store float %call32, float* %ep, align 4
  %43 = load float* %f, align 4
  %44 = load float* %sp, align 4
  %mul = fmul float %43, %44
  %45 = load float* %f, align 4
  %sub33 = fsub float 1.000000e+00, %45
  %46 = load float* %ep, align 4
  %mul34 = fmul float %sub33, %46
  %add35 = fadd float %mul, %mul34
  store float %add35, float* %retval
  br label %return

return:                                           ; preds = %if.else22, %if.else15, %if.then14, %if.then7
  %47 = load float* %retval
  ret float %47
}

declare void @parwave(%struct.klatt_global_t*, %struct.klatt_frame_t*, i16*) #2

; Function Attrs: nounwind ssp uwtable
define internal void @jsru_save(double %f0, float* %tp) #0 {
entry:
  %f0.addr = alloca double, align 8
  %tp.addr = alloca float*, align 8
  store double %f0, double* %f0.addr, align 8
  store float* %tp, float** %tp.addr, align 8
  %0 = load double* %f0.addr, align 8
  %div = fdiv double %0, 2.500000e+01
  %call = call double @log(double %div) #4
  %call1 = call double @log(double 2.000000e+00) #4
  %div2 = fdiv double %call, %call1
  %mul = fmul double 1.600000e+01, %div2
  %sub = fsub double %mul, 1.000000e+00
  store double %sub, double* %f0.addr, align 8
  %1 = load float** %tp.addr, align 8
  %arrayidx = getelementptr inbounds float* %1, i64 0
  %2 = load float* %arrayidx, align 4
  %call3 = call i32 @jsru_freq(float %2, float 9.500000e+01, float 5.000000e+00)
  %3 = load %struct.__sFILE** @jsru_file, align 8
  %call4 = call i32 @fputc(i32 %call3, %struct.__sFILE* %3)
  %4 = load float** %tp.addr, align 8
  %arrayidx5 = getelementptr inbounds float* %4, i64 7
  %5 = load float* %arrayidx5, align 4
  %call6 = call i32 @jsru_amp(float %5)
  %6 = load %struct.__sFILE** @jsru_file, align 8
  %call7 = call i32 @fputc(i32 %call6, %struct.__sFILE* %6)
  %7 = load float** %tp.addr, align 8
  %arrayidx8 = getelementptr inbounds float* %7, i64 1
  %8 = load float* %arrayidx8, align 4
  %call9 = call i32 @jsru_freq(float %8, float 1.250000e+02, float 2.500000e+01)
  %9 = load %struct.__sFILE** @jsru_file, align 8
  %call10 = call i32 @fputc(i32 %call9, %struct.__sFILE* %9)
  %10 = load float** %tp.addr, align 8
  %arrayidx11 = getelementptr inbounds float* %10, i64 8
  %11 = load float* %arrayidx11, align 4
  %call12 = call i32 @jsru_amp(float %11)
  %12 = load %struct.__sFILE** @jsru_file, align 8
  %call13 = call i32 @fputc(i32 %call12, %struct.__sFILE* %12)
  %13 = load float** %tp.addr, align 8
  %arrayidx14 = getelementptr inbounds float* %13, i64 2
  %14 = load float* %arrayidx14, align 4
  %call15 = call i32 @jsru_freq(float %14, float 5.500000e+02, float 5.000000e+01)
  %15 = load %struct.__sFILE** @jsru_file, align 8
  %call16 = call i32 @fputc(i32 %call15, %struct.__sFILE* %15)
  %16 = load float** %tp.addr, align 8
  %arrayidx17 = getelementptr inbounds float* %16, i64 9
  %17 = load float* %arrayidx17, align 4
  %call18 = call i32 @jsru_amp(float %17)
  %18 = load %struct.__sFILE** @jsru_file, align 8
  %call19 = call i32 @fputc(i32 %call18, %struct.__sFILE* %18)
  %19 = load float** %tp.addr, align 8
  %arrayidx20 = getelementptr inbounds float* %19, i64 3
  %20 = load float* %arrayidx20, align 4
  %call21 = call i32 @jsru_freq(float %20, float 1.350000e+03, float 5.000000e+01)
  %21 = load %struct.__sFILE** @jsru_file, align 8
  %call22 = call i32 @fputc(i32 %call21, %struct.__sFILE* %21)
  %22 = load float** %tp.addr, align 8
  %arrayidx23 = getelementptr inbounds float* %22, i64 10
  %23 = load float* %arrayidx23, align 4
  %call24 = call i32 @jsru_amp(float %23)
  %24 = load %struct.__sFILE** @jsru_file, align 8
  %call25 = call i32 @fputc(i32 %call24, %struct.__sFILE* %24)
  %25 = load float** %tp.addr, align 8
  %arrayidx26 = getelementptr inbounds float* %25, i64 11
  %26 = load float* %arrayidx26, align 4
  %call27 = call i32 @jsru_amp(float %26)
  %27 = load %struct.__sFILE** @jsru_file, align 8
  %call28 = call i32 @fputc(i32 %call27, %struct.__sFILE* %27)
  %28 = load float** %tp.addr, align 8
  %arrayidx29 = getelementptr inbounds float* %28, i64 15
  %29 = load float* %arrayidx29, align 4
  %call30 = call i32 @jsru_amp(float %29)
  %30 = load %struct.__sFILE** @jsru_file, align 8
  %call31 = call i32 @fputc(i32 %call30, %struct.__sFILE* %30)
  %31 = load double* %f0.addr, align 8
  %conv = fptosi double %31 to i32
  %32 = load %struct.__sFILE** @jsru_file, align 8
  %call32 = call i32 @fputc(i32 %conv, %struct.__sFILE* %32)
  %33 = load %struct.__sFILE** @jsru_file, align 8
  %call33 = call i32 @fputc(i32 32, %struct.__sFILE* %33)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @init_holmes(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %par_name = alloca i8*, align 8
  %jsru_name = alloca i8*, align 8
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i8* null, i8** %par_name, align 8
  store i8* null, i8** %jsru_name, align 8
  %0 = load i32* %argc.addr, align 4
  %1 = load i8*** %argv.addr, align 8
  %call = call i32 (i8*, i32, i8**, ...)* @getargs(i8* getelementptr inbounds ([7 x i8]* @.str11, i32 0, i32 0), i32 %0, i8** %1, i8* getelementptr inbounds ([2 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str8, i32 0, i32 0), i8** %par_name, i8* getelementptr inbounds ([24 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str8, i32 0, i32 0), i8** %jsru_name, i8* getelementptr inbounds ([32 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str17, i32 0, i32 0), i32* @speed, i8* getelementptr inbounds ([24 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str20, i32 0, i32 0), double* @frac, i8* getelementptr inbounds ([28 x i8]* @.str21, i32 0, i32 0), i8* null)
  store i32 %call, i32* %argc.addr, align 4
  %2 = load i32* @help_only, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32* %argc.addr, align 4
  store i32 %3, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i8** %par_name, align 8
  %tobool1 = icmp ne i8* %4, null
  br i1 %tobool1, label %if.then2, label %if.end7

if.then2:                                         ; preds = %if.end
  %5 = load i8** %par_name, align 8
  %call3 = call %struct.__sFILE* @"\01_fopen"(i8* %5, i8* getelementptr inbounds ([2 x i8]* @.str22, i32 0, i32 0))
  store %struct.__sFILE* %call3, %struct.__sFILE** @par_file, align 8
  %6 = load %struct.__sFILE** @par_file, align 8
  %tobool4 = icmp ne %struct.__sFILE* %6, null
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.then2
  %7 = load i8** %par_name, align 8
  call void @perror(i8* %7)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.then2
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.end
  %8 = load i8** %jsru_name, align 8
  %tobool8 = icmp ne i8* %8, null
  br i1 %tobool8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end7
  %9 = load i8** %jsru_name, align 8
  %call10 = call %struct.__sFILE* @"\01_fopen"(i8* %9, i8* getelementptr inbounds ([2 x i8]* @.str22, i32 0, i32 0))
  store %struct.__sFILE* %call10, %struct.__sFILE** @jsru_file, align 8
  %10 = load %struct.__sFILE** @jsru_file, align 8
  %tobool11 = icmp ne %struct.__sFILE* %10, null
  br i1 %tobool11, label %if.end13, label %if.then12

if.then12:                                        ; preds = %if.then9
  %11 = load i8** %jsru_name, align 8
  call void @perror(i8* %11)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end7
  %12 = load i32* %argc.addr, align 4
  store i32 %12, i32* %retval
  br label %return

return:                                           ; preds = %if.end14, %if.then
  %13 = load i32* %retval
  ret i32 %13
}

declare i32 @getargs(i8*, i32, i8**, ...) #2

declare %struct.__sFILE* @"\01_fopen"(i8*, i8*) #2

declare void @perror(i8*) #2

; Function Attrs: nounwind ssp uwtable
define void @term_holmes() #0 {
entry:
  %0 = load %struct.__sFILE** @par_file, align 8
  %tobool = icmp ne %struct.__sFILE* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.__sFILE** @par_file, align 8
  %call = call i32 @fclose(%struct.__sFILE* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.__sFILE** @jsru_file, align 8
  %tobool1 = icmp ne %struct.__sFILE* %2, null
  br i1 %tobool1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %3 = load %struct.__sFILE** @jsru_file, align 8
  %call3 = call i32 @fclose(%struct.__sFILE* %3)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  ret void
}

declare i32 @fclose(%struct.__sFILE*) #2

; Function Attrs: nounwind readnone
declare double @log(double) #3

declare i32 @fputc(i32, %struct.__sFILE*) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @jsru_freq(float %f, float %base, float %inc) #0 {
entry:
  %f.addr = alloca float, align 4
  %base.addr = alloca float, align 4
  %inc.addr = alloca float, align 4
  %i = alloca i32, align 4
  store float %f, float* %f.addr, align 4
  store float %base, float* %base.addr, align 4
  store float %inc, float* %inc.addr, align 4
  %0 = load float* %f.addr, align 4
  %1 = load float* %base.addr, align 4
  %sub = fsub float %0, %1
  %2 = load float* %inc.addr, align 4
  %div = fdiv float %sub, %2
  store float %div, float* %f.addr, align 4
  %3 = load float* %f.addr, align 4
  %conv = fptosi float %3 to i32
  store i32 %conv, i32* %i, align 4
  %4 = load i32* %i, align 4
  %cmp = icmp sge i32 %4, 64
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 63, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32* %i, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @jsru_amp(float %a) #0 {
entry:
  %a.addr = alloca float, align 4
  %i = alloca i32, align 4
  store float %a, float* %a.addr, align 4
  %0 = load float* %a.addr, align 4
  %conv = fptosi float %0 to i32
  store i32 %conv, i32* %i, align 4
  %1 = load i32* %i, align 4
  %cmp = icmp sle i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32* %i, align 4
  %cmp2 = icmp sge i32 %2, 64
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  store i32 63, i32* %i, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %3 = load i32* %i, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define internal float @linear(float %a, float %b, i32 %t, i32 %d) #0 {
entry:
  %retval = alloca float, align 4
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %t.addr = alloca i32, align 4
  %d.addr = alloca i32, align 4
  %f = alloca float, align 4
  store float %a, float* %a.addr, align 4
  store float %b, float* %b.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  store i32 %d, i32* %d.addr, align 4
  %0 = load i32* %t.addr, align 4
  %cmp = icmp sle i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load float* %a.addr, align 4
  store float %1, float* %retval
  br label %return

if.else:                                          ; preds = %entry
  %2 = load i32* %t.addr, align 4
  %3 = load i32* %d.addr, align 4
  %cmp1 = icmp sge i32 %2, %3
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  %4 = load float* %b.addr, align 4
  store float %4, float* %retval
  br label %return

if.else3:                                         ; preds = %if.else
  %5 = load i32* %t.addr, align 4
  %conv = sitofp i32 %5 to float
  %6 = load i32* %d.addr, align 4
  %conv4 = sitofp i32 %6 to float
  %div = fdiv float %conv, %conv4
  store float %div, float* %f, align 4
  %7 = load float* %a.addr, align 4
  %8 = load float* %b.addr, align 4
  %9 = load float* %a.addr, align 4
  %sub = fsub float %8, %9
  %10 = load float* %f, align 4
  %mul = fmul float %sub, %10
  %add = fadd float %7, %mul
  store float %add, float* %retval
  br label %return

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %11 = load float* %retval
  ret float %11
}

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
