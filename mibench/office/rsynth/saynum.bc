; ModuleID = 'saynum.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9.0"

%struct.darray_t = type { i8*, i32, i32, i16, i16 }

@.str = private unnamed_addr constant [63 x i8] c"$Id: saynum.c,v 1.13 1994/11/08 13:30:50 a904209 Exp a904209 $\00", align 1
@saynum_id = global i8* getelementptr inbounds ([63 x i8]* @.str, i32 0, i32 0), align 8
@.str1 = private unnamed_addr constant [6 x i8] c"minus\00", align 1
@.str2 = private unnamed_addr constant [6 x i8] c"a lot\00", align 1
@.str3 = private unnamed_addr constant [8 x i8] c"billion\00", align 1
@.str4 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str5 = private unnamed_addr constant [8 x i8] c"million\00", align 1
@.str6 = private unnamed_addr constant [9 x i8] c"thousand\00", align 1
@Cardinals = internal global [20 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str48, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str49, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str51, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str56, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str57, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str58, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str59, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str60, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str61, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str62, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str63, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str64, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str65, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str66, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str67, i32 0, i32 0)], align 16
@.str7 = private unnamed_addr constant [8 x i8] c"hundred\00", align 1
@Twenties = internal global [8 x i8*] [i8* getelementptr inbounds ([7 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str46, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str47, i32 0, i32 0)], align 16
@.str8 = private unnamed_addr constant [10 x i8] c"billionth\00", align 1
@.str9 = private unnamed_addr constant [10 x i8] c"millionth\00", align 1
@.str10 = private unnamed_addr constant [11 x i8] c"thousandth\00", align 1
@.str11 = private unnamed_addr constant [10 x i8] c"hundredth\00", align 1
@Ord_twenties = internal global [8 x i8*] [i8* getelementptr inbounds ([10 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str37, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str38, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str39, i32 0, i32 0)], align 16
@Ordinals = internal global [20 x i8*] [i8* getelementptr inbounds ([7 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str31, i32 0, i32 0)], align 16
@.str12 = private unnamed_addr constant [7 x i8] c"zeroth\00", align 1
@.str13 = private unnamed_addr constant [6 x i8] c"first\00", align 1
@.str14 = private unnamed_addr constant [7 x i8] c"second\00", align 1
@.str15 = private unnamed_addr constant [6 x i8] c"third\00", align 1
@.str16 = private unnamed_addr constant [7 x i8] c"fourth\00", align 1
@.str17 = private unnamed_addr constant [6 x i8] c"fifth\00", align 1
@.str18 = private unnamed_addr constant [6 x i8] c"sixth\00", align 1
@.str19 = private unnamed_addr constant [8 x i8] c"seventh\00", align 1
@.str20 = private unnamed_addr constant [7 x i8] c"eighth\00", align 1
@.str21 = private unnamed_addr constant [6 x i8] c"ninth\00", align 1
@.str22 = private unnamed_addr constant [6 x i8] c"tenth\00", align 1
@.str23 = private unnamed_addr constant [9 x i8] c"eleventh\00", align 1
@.str24 = private unnamed_addr constant [8 x i8] c"twelfth\00", align 1
@.str25 = private unnamed_addr constant [11 x i8] c"thirteenth\00", align 1
@.str26 = private unnamed_addr constant [11 x i8] c"fourteenth\00", align 1
@.str27 = private unnamed_addr constant [10 x i8] c"fifteenth\00", align 1
@.str28 = private unnamed_addr constant [10 x i8] c"sixteenth\00", align 1
@.str29 = private unnamed_addr constant [12 x i8] c"seventeenth\00", align 1
@.str30 = private unnamed_addr constant [11 x i8] c"eighteenth\00", align 1
@.str31 = private unnamed_addr constant [11 x i8] c"nineteenth\00", align 1
@.str32 = private unnamed_addr constant [10 x i8] c"twentieth\00", align 1
@.str33 = private unnamed_addr constant [10 x i8] c"thirtieth\00", align 1
@.str34 = private unnamed_addr constant [9 x i8] c"fortieth\00", align 1
@.str35 = private unnamed_addr constant [9 x i8] c"fiftieth\00", align 1
@.str36 = private unnamed_addr constant [9 x i8] c"sixtieth\00", align 1
@.str37 = private unnamed_addr constant [11 x i8] c"seventieth\00", align 1
@.str38 = private unnamed_addr constant [10 x i8] c"eightieth\00", align 1
@.str39 = private unnamed_addr constant [10 x i8] c"ninetieth\00", align 1
@.str40 = private unnamed_addr constant [7 x i8] c"twenty\00", align 1
@.str41 = private unnamed_addr constant [7 x i8] c"thirty\00", align 1
@.str42 = private unnamed_addr constant [6 x i8] c"forty\00", align 1
@.str43 = private unnamed_addr constant [6 x i8] c"fifty\00", align 1
@.str44 = private unnamed_addr constant [6 x i8] c"sixty\00", align 1
@.str45 = private unnamed_addr constant [8 x i8] c"seventy\00", align 1
@.str46 = private unnamed_addr constant [7 x i8] c"eighty\00", align 1
@.str47 = private unnamed_addr constant [7 x i8] c"ninety\00", align 1
@.str48 = private unnamed_addr constant [5 x i8] c"zero\00", align 1
@.str49 = private unnamed_addr constant [4 x i8] c"one\00", align 1
@.str50 = private unnamed_addr constant [4 x i8] c"two\00", align 1
@.str51 = private unnamed_addr constant [6 x i8] c"three\00", align 1
@.str52 = private unnamed_addr constant [5 x i8] c"four\00", align 1
@.str53 = private unnamed_addr constant [5 x i8] c"five\00", align 1
@.str54 = private unnamed_addr constant [4 x i8] c"six\00", align 1
@.str55 = private unnamed_addr constant [6 x i8] c"seven\00", align 1
@.str56 = private unnamed_addr constant [6 x i8] c"eight\00", align 1
@.str57 = private unnamed_addr constant [5 x i8] c"nine\00", align 1
@.str58 = private unnamed_addr constant [4 x i8] c"ten\00", align 1
@.str59 = private unnamed_addr constant [7 x i8] c"eleven\00", align 1
@.str60 = private unnamed_addr constant [7 x i8] c"twelve\00", align 1
@.str61 = private unnamed_addr constant [9 x i8] c"thirteen\00", align 1
@.str62 = private unnamed_addr constant [9 x i8] c"fourteen\00", align 1
@.str63 = private unnamed_addr constant [8 x i8] c"fifteen\00", align 1
@.str64 = private unnamed_addr constant [8 x i8] c"sixteen\00", align 1
@.str65 = private unnamed_addr constant [10 x i8] c"seventeen\00", align 1
@.str66 = private unnamed_addr constant [9 x i8] c"eighteen\00", align 1
@.str67 = private unnamed_addr constant [9 x i8] c"nineteen\00", align 1

; Function Attrs: nounwind ssp uwtable
define i32 @xlate_cardinal(i64 %value, %struct.darray_t* %phone) #0 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i64, align 8
  %phone.addr = alloca %struct.darray_t*, align 8
  %nph = alloca i32, align 4
  store i64 %value, i64* %value.addr, align 8
  store %struct.darray_t* %phone, %struct.darray_t** %phone.addr, align 8
  store i32 0, i32* %nph, align 4
  %0 = load i64* %value.addr, align 8
  %cmp = icmp slt i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %1 = load %struct.darray_t** %phone.addr, align 8
  %call = call i32 @xlate_string(i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), %struct.darray_t* %1)
  %2 = load i32* %nph, align 4
  %add = add i32 %2, %call
  store i32 %add, i32* %nph, align 4
  %3 = load i64* %value.addr, align 8
  %sub = sub nsw i64 0, %3
  store i64 %sub, i64* %value.addr, align 8
  %4 = load i64* %value.addr, align 8
  %cmp1 = icmp slt i64 %4, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %5 = load %struct.darray_t** %phone.addr, align 8
  %call3 = call i32 @xlate_string(i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0), %struct.darray_t* %5)
  %6 = load i32* %nph, align 4
  %add4 = add i32 %6, %call3
  store i32 %add4, i32* %nph, align 4
  %7 = load i32* %nph, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  %8 = load i64* %value.addr, align 8
  %cmp6 = icmp sge i64 %8, 1000000000
  br i1 %cmp6, label %if.then7, label %if.end20

if.then7:                                         ; preds = %if.end5
  %9 = load i64* %value.addr, align 8
  %div = sdiv i64 %9, 1000000000
  %10 = load %struct.darray_t** %phone.addr, align 8
  %call8 = call i32 @xlate_cardinal(i64 %div, %struct.darray_t* %10)
  %11 = load i32* %nph, align 4
  %add9 = add i32 %11, %call8
  store i32 %add9, i32* %nph, align 4
  %12 = load %struct.darray_t** %phone.addr, align 8
  %call10 = call i32 @xlate_string(i8* getelementptr inbounds ([8 x i8]* @.str3, i32 0, i32 0), %struct.darray_t* %12)
  %13 = load i32* %nph, align 4
  %add11 = add i32 %13, %call10
  store i32 %add11, i32* %nph, align 4
  %14 = load i64* %value.addr, align 8
  %rem = srem i64 %14, 1000000000
  store i64 %rem, i64* %value.addr, align 8
  %15 = load i64* %value.addr, align 8
  %cmp12 = icmp eq i64 %15, 0
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.then7
  %16 = load i32* %nph, align 4
  store i32 %16, i32* %retval
  br label %return

if.end14:                                         ; preds = %if.then7
  %17 = load i64* %value.addr, align 8
  %cmp15 = icmp slt i64 %17, 100
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.end14
  %18 = load %struct.darray_t** %phone.addr, align 8
  %call17 = call i32 @xlate_string(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), %struct.darray_t* %18)
  %19 = load i32* %nph, align 4
  %add18 = add i32 %19, %call17
  store i32 %add18, i32* %nph, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.end14
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end5
  %20 = load i64* %value.addr, align 8
  %cmp21 = icmp sge i64 %20, 1000000
  br i1 %cmp21, label %if.then22, label %if.end37

if.then22:                                        ; preds = %if.end20
  %21 = load i64* %value.addr, align 8
  %div23 = sdiv i64 %21, 1000000
  %22 = load %struct.darray_t** %phone.addr, align 8
  %call24 = call i32 @xlate_cardinal(i64 %div23, %struct.darray_t* %22)
  %23 = load i32* %nph, align 4
  %add25 = add i32 %23, %call24
  store i32 %add25, i32* %nph, align 4
  %24 = load %struct.darray_t** %phone.addr, align 8
  %call26 = call i32 @xlate_string(i8* getelementptr inbounds ([8 x i8]* @.str5, i32 0, i32 0), %struct.darray_t* %24)
  %25 = load i32* %nph, align 4
  %add27 = add i32 %25, %call26
  store i32 %add27, i32* %nph, align 4
  %26 = load i64* %value.addr, align 8
  %rem28 = srem i64 %26, 1000000
  store i64 %rem28, i64* %value.addr, align 8
  %27 = load i64* %value.addr, align 8
  %cmp29 = icmp eq i64 %27, 0
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then22
  %28 = load i32* %nph, align 4
  store i32 %28, i32* %retval
  br label %return

if.end31:                                         ; preds = %if.then22
  %29 = load i64* %value.addr, align 8
  %cmp32 = icmp slt i64 %29, 100
  br i1 %cmp32, label %if.then33, label %if.end36

if.then33:                                        ; preds = %if.end31
  %30 = load %struct.darray_t** %phone.addr, align 8
  %call34 = call i32 @xlate_string(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), %struct.darray_t* %30)
  %31 = load i32* %nph, align 4
  %add35 = add i32 %31, %call34
  store i32 %add35, i32* %nph, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then33, %if.end31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end20
  %32 = load i64* %value.addr, align 8
  %cmp38 = icmp sge i64 %32, 1000
  br i1 %cmp38, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end37
  %33 = load i64* %value.addr, align 8
  %cmp39 = icmp sle i64 %33, 1099
  br i1 %cmp39, label %if.then41, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end37
  %34 = load i64* %value.addr, align 8
  %cmp40 = icmp sge i64 %34, 2000
  br i1 %cmp40, label %if.then41, label %if.end56

if.then41:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %35 = load i64* %value.addr, align 8
  %div42 = sdiv i64 %35, 1000
  %36 = load %struct.darray_t** %phone.addr, align 8
  %call43 = call i32 @xlate_cardinal(i64 %div42, %struct.darray_t* %36)
  %37 = load i32* %nph, align 4
  %add44 = add i32 %37, %call43
  store i32 %add44, i32* %nph, align 4
  %38 = load %struct.darray_t** %phone.addr, align 8
  %call45 = call i32 @xlate_string(i8* getelementptr inbounds ([9 x i8]* @.str6, i32 0, i32 0), %struct.darray_t* %38)
  %39 = load i32* %nph, align 4
  %add46 = add i32 %39, %call45
  store i32 %add46, i32* %nph, align 4
  %40 = load i64* %value.addr, align 8
  %rem47 = srem i64 %40, 1000
  store i64 %rem47, i64* %value.addr, align 8
  %41 = load i64* %value.addr, align 8
  %cmp48 = icmp eq i64 %41, 0
  br i1 %cmp48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.then41
  %42 = load i32* %nph, align 4
  store i32 %42, i32* %retval
  br label %return

if.end50:                                         ; preds = %if.then41
  %43 = load i64* %value.addr, align 8
  %cmp51 = icmp slt i64 %43, 100
  br i1 %cmp51, label %if.then52, label %if.end55

if.then52:                                        ; preds = %if.end50
  %44 = load %struct.darray_t** %phone.addr, align 8
  %call53 = call i32 @xlate_string(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), %struct.darray_t* %44)
  %45 = load i32* %nph, align 4
  %add54 = add i32 %45, %call53
  store i32 %add54, i32* %nph, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then52, %if.end50
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %lor.lhs.false
  %46 = load i64* %value.addr, align 8
  %cmp57 = icmp sge i64 %46, 100
  br i1 %cmp57, label %if.then58, label %if.end68

if.then58:                                        ; preds = %if.end56
  %47 = load i64* %value.addr, align 8
  %div59 = sdiv i64 %47, 100
  %arrayidx = getelementptr inbounds [20 x i8*]* @Cardinals, i32 0, i64 %div59
  %48 = load i8** %arrayidx, align 8
  %49 = load %struct.darray_t** %phone.addr, align 8
  %call60 = call i32 @xlate_string(i8* %48, %struct.darray_t* %49)
  %50 = load i32* %nph, align 4
  %add61 = add i32 %50, %call60
  store i32 %add61, i32* %nph, align 4
  %51 = load %struct.darray_t** %phone.addr, align 8
  %call62 = call i32 @xlate_string(i8* getelementptr inbounds ([8 x i8]* @.str7, i32 0, i32 0), %struct.darray_t* %51)
  %52 = load i32* %nph, align 4
  %add63 = add i32 %52, %call62
  store i32 %add63, i32* %nph, align 4
  %53 = load i64* %value.addr, align 8
  %rem64 = srem i64 %53, 100
  store i64 %rem64, i64* %value.addr, align 8
  %54 = load i64* %value.addr, align 8
  %cmp65 = icmp eq i64 %54, 0
  br i1 %cmp65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.then58
  %55 = load i32* %nph, align 4
  store i32 %55, i32* %retval
  br label %return

if.end67:                                         ; preds = %if.then58
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end56
  %56 = load i64* %value.addr, align 8
  %cmp69 = icmp sge i64 %56, 20
  br i1 %cmp69, label %if.then70, label %if.end80

if.then70:                                        ; preds = %if.end68
  %57 = load i64* %value.addr, align 8
  %sub71 = sub nsw i64 %57, 20
  %div72 = sdiv i64 %sub71, 10
  %arrayidx73 = getelementptr inbounds [8 x i8*]* @Twenties, i32 0, i64 %div72
  %58 = load i8** %arrayidx73, align 8
  %59 = load %struct.darray_t** %phone.addr, align 8
  %call74 = call i32 @xlate_string(i8* %58, %struct.darray_t* %59)
  %60 = load i32* %nph, align 4
  %add75 = add i32 %60, %call74
  store i32 %add75, i32* %nph, align 4
  %61 = load i64* %value.addr, align 8
  %rem76 = srem i64 %61, 10
  store i64 %rem76, i64* %value.addr, align 8
  %62 = load i64* %value.addr, align 8
  %cmp77 = icmp eq i64 %62, 0
  br i1 %cmp77, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.then70
  %63 = load i32* %nph, align 4
  store i32 %63, i32* %retval
  br label %return

if.end79:                                         ; preds = %if.then70
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end68
  %64 = load i64* %value.addr, align 8
  %arrayidx81 = getelementptr inbounds [20 x i8*]* @Cardinals, i32 0, i64 %64
  %65 = load i8** %arrayidx81, align 8
  %66 = load %struct.darray_t** %phone.addr, align 8
  %call82 = call i32 @xlate_string(i8* %65, %struct.darray_t* %66)
  %67 = load i32* %nph, align 4
  %add83 = add i32 %67, %call82
  store i32 %add83, i32* %nph, align 4
  %68 = load i32* %nph, align 4
  store i32 %68, i32* %retval
  br label %return

return:                                           ; preds = %if.end80, %if.then78, %if.then66, %if.then49, %if.then30, %if.then13, %if.then2
  %69 = load i32* %retval
  ret i32 %69
}

declare i32 @xlate_string(i8*, %struct.darray_t*) #1

; Function Attrs: nounwind ssp uwtable
define i32 @xlate_ordinal(i64 %value, %struct.darray_t* %phone) #0 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i64, align 8
  %phone.addr = alloca %struct.darray_t*, align 8
  %nph = alloca i32, align 4
  store i64 %value, i64* %value.addr, align 8
  store %struct.darray_t* %phone, %struct.darray_t** %phone.addr, align 8
  store i32 0, i32* %nph, align 4
  %0 = load i64* %value.addr, align 8
  %cmp = icmp slt i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %1 = load %struct.darray_t** %phone.addr, align 8
  %call = call i32 @xlate_string(i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), %struct.darray_t* %1)
  %2 = load i32* %nph, align 4
  %add = add i32 %2, %call
  store i32 %add, i32* %nph, align 4
  %3 = load i64* %value.addr, align 8
  %sub = sub nsw i64 0, %3
  store i64 %sub, i64* %value.addr, align 8
  %4 = load i64* %value.addr, align 8
  %cmp1 = icmp slt i64 %4, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %5 = load %struct.darray_t** %phone.addr, align 8
  %call3 = call i32 @xlate_string(i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0), %struct.darray_t* %5)
  %6 = load i32* %nph, align 4
  %add4 = add i32 %6, %call3
  store i32 %add4, i32* %nph, align 4
  %7 = load i32* %nph, align 4
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  %8 = load i64* %value.addr, align 8
  %cmp6 = icmp sge i64 %8, 1000000000
  br i1 %cmp6, label %if.then7, label %if.end22

if.then7:                                         ; preds = %if.end5
  %9 = load i64* %value.addr, align 8
  %div = sdiv i64 %9, 1000000000
  %10 = load %struct.darray_t** %phone.addr, align 8
  %call8 = call i32 @xlate_cardinal(i64 %div, %struct.darray_t* %10)
  %11 = load i32* %nph, align 4
  %add9 = add i32 %11, %call8
  store i32 %add9, i32* %nph, align 4
  %12 = load i64* %value.addr, align 8
  %rem = srem i64 %12, 1000000000
  store i64 %rem, i64* %value.addr, align 8
  %13 = load i64* %value.addr, align 8
  %cmp10 = icmp eq i64 %13, 0
  br i1 %cmp10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.then7
  %14 = load %struct.darray_t** %phone.addr, align 8
  %call12 = call i32 @xlate_string(i8* getelementptr inbounds ([10 x i8]* @.str8, i32 0, i32 0), %struct.darray_t* %14)
  %15 = load i32* %nph, align 4
  %add13 = add i32 %15, %call12
  store i32 %add13, i32* %nph, align 4
  %16 = load i32* %nph, align 4
  store i32 %16, i32* %retval
  br label %return

if.end14:                                         ; preds = %if.then7
  %17 = load %struct.darray_t** %phone.addr, align 8
  %call15 = call i32 @xlate_string(i8* getelementptr inbounds ([8 x i8]* @.str3, i32 0, i32 0), %struct.darray_t* %17)
  %18 = load i32* %nph, align 4
  %add16 = add i32 %18, %call15
  store i32 %add16, i32* %nph, align 4
  %19 = load i64* %value.addr, align 8
  %cmp17 = icmp slt i64 %19, 100
  br i1 %cmp17, label %if.then18, label %if.end21

if.then18:                                        ; preds = %if.end14
  %20 = load %struct.darray_t** %phone.addr, align 8
  %call19 = call i32 @xlate_string(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), %struct.darray_t* %20)
  %21 = load i32* %nph, align 4
  %add20 = add i32 %21, %call19
  store i32 %add20, i32* %nph, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then18, %if.end14
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end5
  %22 = load i64* %value.addr, align 8
  %cmp23 = icmp sge i64 %22, 1000000
  br i1 %cmp23, label %if.then24, label %if.end41

if.then24:                                        ; preds = %if.end22
  %23 = load i64* %value.addr, align 8
  %div25 = sdiv i64 %23, 1000000
  %24 = load %struct.darray_t** %phone.addr, align 8
  %call26 = call i32 @xlate_cardinal(i64 %div25, %struct.darray_t* %24)
  %25 = load i32* %nph, align 4
  %add27 = add i32 %25, %call26
  store i32 %add27, i32* %nph, align 4
  %26 = load i64* %value.addr, align 8
  %rem28 = srem i64 %26, 1000000
  store i64 %rem28, i64* %value.addr, align 8
  %27 = load i64* %value.addr, align 8
  %cmp29 = icmp eq i64 %27, 0
  br i1 %cmp29, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.then24
  %28 = load %struct.darray_t** %phone.addr, align 8
  %call31 = call i32 @xlate_string(i8* getelementptr inbounds ([10 x i8]* @.str9, i32 0, i32 0), %struct.darray_t* %28)
  %29 = load i32* %nph, align 4
  %add32 = add i32 %29, %call31
  store i32 %add32, i32* %nph, align 4
  %30 = load i32* %nph, align 4
  store i32 %30, i32* %retval
  br label %return

if.end33:                                         ; preds = %if.then24
  %31 = load %struct.darray_t** %phone.addr, align 8
  %call34 = call i32 @xlate_string(i8* getelementptr inbounds ([8 x i8]* @.str5, i32 0, i32 0), %struct.darray_t* %31)
  %32 = load i32* %nph, align 4
  %add35 = add i32 %32, %call34
  store i32 %add35, i32* %nph, align 4
  %33 = load i64* %value.addr, align 8
  %cmp36 = icmp slt i64 %33, 100
  br i1 %cmp36, label %if.then37, label %if.end40

if.then37:                                        ; preds = %if.end33
  %34 = load %struct.darray_t** %phone.addr, align 8
  %call38 = call i32 @xlate_string(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), %struct.darray_t* %34)
  %35 = load i32* %nph, align 4
  %add39 = add i32 %35, %call38
  store i32 %add39, i32* %nph, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %if.end33
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end22
  %36 = load i64* %value.addr, align 8
  %cmp42 = icmp sge i64 %36, 1000
  br i1 %cmp42, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end41
  %37 = load i64* %value.addr, align 8
  %cmp43 = icmp sle i64 %37, 1099
  br i1 %cmp43, label %if.then45, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end41
  %38 = load i64* %value.addr, align 8
  %cmp44 = icmp sge i64 %38, 2000
  br i1 %cmp44, label %if.then45, label %if.end62

if.then45:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %39 = load i64* %value.addr, align 8
  %div46 = sdiv i64 %39, 1000
  %40 = load %struct.darray_t** %phone.addr, align 8
  %call47 = call i32 @xlate_cardinal(i64 %div46, %struct.darray_t* %40)
  %41 = load i32* %nph, align 4
  %add48 = add i32 %41, %call47
  store i32 %add48, i32* %nph, align 4
  %42 = load i64* %value.addr, align 8
  %rem49 = srem i64 %42, 1000
  store i64 %rem49, i64* %value.addr, align 8
  %43 = load i64* %value.addr, align 8
  %cmp50 = icmp eq i64 %43, 0
  br i1 %cmp50, label %if.then51, label %if.end54

if.then51:                                        ; preds = %if.then45
  %44 = load %struct.darray_t** %phone.addr, align 8
  %call52 = call i32 @xlate_string(i8* getelementptr inbounds ([11 x i8]* @.str10, i32 0, i32 0), %struct.darray_t* %44)
  %45 = load i32* %nph, align 4
  %add53 = add i32 %45, %call52
  store i32 %add53, i32* %nph, align 4
  %46 = load i32* %nph, align 4
  store i32 %46, i32* %retval
  br label %return

if.end54:                                         ; preds = %if.then45
  %47 = load %struct.darray_t** %phone.addr, align 8
  %call55 = call i32 @xlate_string(i8* getelementptr inbounds ([9 x i8]* @.str6, i32 0, i32 0), %struct.darray_t* %47)
  %48 = load i32* %nph, align 4
  %add56 = add i32 %48, %call55
  store i32 %add56, i32* %nph, align 4
  %49 = load i64* %value.addr, align 8
  %cmp57 = icmp slt i64 %49, 100
  br i1 %cmp57, label %if.then58, label %if.end61

if.then58:                                        ; preds = %if.end54
  %50 = load %struct.darray_t** %phone.addr, align 8
  %call59 = call i32 @xlate_string(i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0), %struct.darray_t* %50)
  %51 = load i32* %nph, align 4
  %add60 = add i32 %51, %call59
  store i32 %add60, i32* %nph, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then58, %if.end54
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %lor.lhs.false
  %52 = load i64* %value.addr, align 8
  %cmp63 = icmp sge i64 %52, 100
  br i1 %cmp63, label %if.then64, label %if.end76

if.then64:                                        ; preds = %if.end62
  %53 = load i64* %value.addr, align 8
  %div65 = sdiv i64 %53, 100
  %arrayidx = getelementptr inbounds [20 x i8*]* @Cardinals, i32 0, i64 %div65
  %54 = load i8** %arrayidx, align 8
  %55 = load %struct.darray_t** %phone.addr, align 8
  %call66 = call i32 @xlate_string(i8* %54, %struct.darray_t* %55)
  %56 = load i32* %nph, align 4
  %add67 = add i32 %56, %call66
  store i32 %add67, i32* %nph, align 4
  %57 = load i64* %value.addr, align 8
  %rem68 = srem i64 %57, 100
  store i64 %rem68, i64* %value.addr, align 8
  %58 = load i64* %value.addr, align 8
  %cmp69 = icmp eq i64 %58, 0
  br i1 %cmp69, label %if.then70, label %if.end73

if.then70:                                        ; preds = %if.then64
  %59 = load %struct.darray_t** %phone.addr, align 8
  %call71 = call i32 @xlate_string(i8* getelementptr inbounds ([10 x i8]* @.str11, i32 0, i32 0), %struct.darray_t* %59)
  %60 = load i32* %nph, align 4
  %add72 = add i32 %60, %call71
  store i32 %add72, i32* %nph, align 4
  %61 = load i32* %nph, align 4
  store i32 %61, i32* %retval
  br label %return

if.end73:                                         ; preds = %if.then64
  %62 = load %struct.darray_t** %phone.addr, align 8
  %call74 = call i32 @xlate_string(i8* getelementptr inbounds ([8 x i8]* @.str7, i32 0, i32 0), %struct.darray_t* %62)
  %63 = load i32* %nph, align 4
  %add75 = add i32 %63, %call74
  store i32 %add75, i32* %nph, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.end73, %if.end62
  %64 = load i64* %value.addr, align 8
  %cmp77 = icmp sge i64 %64, 20
  br i1 %cmp77, label %if.then78, label %if.end94

if.then78:                                        ; preds = %if.end76
  %65 = load i64* %value.addr, align 8
  %rem79 = srem i64 %65, 10
  %cmp80 = icmp eq i64 %rem79, 0
  br i1 %cmp80, label %if.then81, label %if.end87

if.then81:                                        ; preds = %if.then78
  %66 = load i64* %value.addr, align 8
  %sub82 = sub nsw i64 %66, 20
  %div83 = sdiv i64 %sub82, 10
  %arrayidx84 = getelementptr inbounds [8 x i8*]* @Ord_twenties, i32 0, i64 %div83
  %67 = load i8** %arrayidx84, align 8
  %68 = load %struct.darray_t** %phone.addr, align 8
  %call85 = call i32 @xlate_string(i8* %67, %struct.darray_t* %68)
  %69 = load i32* %nph, align 4
  %add86 = add i32 %69, %call85
  store i32 %add86, i32* %nph, align 4
  %70 = load i32* %nph, align 4
  store i32 %70, i32* %retval
  br label %return

if.end87:                                         ; preds = %if.then78
  %71 = load i64* %value.addr, align 8
  %sub88 = sub nsw i64 %71, 20
  %div89 = sdiv i64 %sub88, 10
  %arrayidx90 = getelementptr inbounds [8 x i8*]* @Twenties, i32 0, i64 %div89
  %72 = load i8** %arrayidx90, align 8
  %73 = load %struct.darray_t** %phone.addr, align 8
  %call91 = call i32 @xlate_string(i8* %72, %struct.darray_t* %73)
  %74 = load i32* %nph, align 4
  %add92 = add i32 %74, %call91
  store i32 %add92, i32* %nph, align 4
  %75 = load i64* %value.addr, align 8
  %rem93 = srem i64 %75, 10
  store i64 %rem93, i64* %value.addr, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.end87, %if.end76
  %76 = load i64* %value.addr, align 8
  %arrayidx95 = getelementptr inbounds [20 x i8*]* @Ordinals, i32 0, i64 %76
  %77 = load i8** %arrayidx95, align 8
  %78 = load %struct.darray_t** %phone.addr, align 8
  %call96 = call i32 @xlate_string(i8* %77, %struct.darray_t* %78)
  %79 = load i32* %nph, align 4
  %add97 = add i32 %79, %call96
  store i32 %add97, i32* %nph, align 4
  %80 = load i32* %nph, align 4
  store i32 %80, i32* %retval
  br label %return

return:                                           ; preds = %if.end94, %if.then81, %if.then70, %if.then51, %if.then30, %if.then11, %if.then2
  %81 = load i32* %retval
  ret i32 %81
}

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
