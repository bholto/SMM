; ModuleID = 'rawdaudio.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.9.0"

%struct.adpcm_state = type { i16, i8 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sbuf = type { i8*, i32 }
%struct.__sFILEX = type opaque

@abuf = common global [500 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [11 x i8] c"input file\00", align 1
@sbuf = common global [1000 x i16] zeroinitializer, align 16
@state = common global %struct.adpcm_state zeroinitializer, align 2
@__stderrp = external global %struct.__sFILE*
@.str1 = private unnamed_addr constant [28 x i8] c"Final valprev=%d, index=%d\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 0, i32* %retval
  br label %while.body

while.body:                                       ; preds = %entry, %if.end3
  %call = call i32 (i32, i8*, i32, ...)* bitcast (i32 (...)* @read to i32 (i32, i8*, i32, ...)*)(i32 0, i8* getelementptr inbounds ([500 x i8]* @abuf, i32 0, i32 0), i32 500)
  store i32 %call, i32* %n, align 4
  %0 = load i32* %n, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  call void @perror(i8* getelementptr inbounds ([11 x i8]* @.str, i32 0, i32 0))
  call void @exit(i32 1) #3
  unreachable

if.end:                                           ; preds = %while.body
  %1 = load i32* %n, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  br label %while.end

if.end3:                                          ; preds = %if.end
  %2 = load i32* %n, align 4
  %mul = mul nsw i32 %2, 2
  call void @adpcm_decoder(i8* getelementptr inbounds ([500 x i8]* @abuf, i32 0, i32 0), i16* getelementptr inbounds ([1000 x i16]* @sbuf, i32 0, i32 0), i32 %mul, %struct.adpcm_state* @state)
  %3 = load i32* %n, align 4
  %mul4 = mul nsw i32 %3, 4
  %call5 = call i32 (i32, i16*, i32, ...)* bitcast (i32 (...)* @write to i32 (i32, i16*, i32, ...)*)(i32 1, i16* getelementptr inbounds ([1000 x i16]* @sbuf, i32 0, i32 0), i32 %mul4)
  br label %while.body

while.end:                                        ; preds = %if.then2
  %4 = load %struct.__sFILE** @__stderrp, align 8
  %5 = load i16* getelementptr inbounds (%struct.adpcm_state* @state, i32 0, i32 0), align 2
  %conv = sext i16 %5 to i32
  %6 = load i8* getelementptr inbounds (%struct.adpcm_state* @state, i32 0, i32 1), align 1
  %conv6 = sext i8 %6 to i32
  %call7 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %4, i8* getelementptr inbounds ([28 x i8]* @.str1, i32 0, i32 0), i32 %conv, i32 %conv6)
  call void @exit(i32 0) #3
  unreachable

return:                                           ; No predecessors!
  %7 = load i32* %retval
  ret i32 %7
}

declare i32 @read(...) #1

declare void @perror(i8*) #1

; Function Attrs: noreturn
declare void @exit(i32) #2

declare void @adpcm_decoder(i8*, i16*, i32, %struct.adpcm_state*) #1

declare i32 @write(...) #1

declare i32 @fprintf(%struct.__sFILE*, i8*, ...) #1

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }
